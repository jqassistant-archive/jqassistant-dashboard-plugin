{"version":3,"sources":["views/Dashboard/AbstractDashboardComponent.js","AppDispatcher.js","views/Dashboard/Header/CustomQuery.js"],"names":["AppDispatcher","require","neo4j","localStorage","getItem","neo4jDriver","neo4jSession","databaseCredentialsProvided","databaseCredentialsCorrect","GenericException","message","name","this","DashboardAbstract","handleAction","bind","setState","dispatcherEventId","register","Promise","checkForDatabaseConnection","then","testDatabaseCredentials","connectionString","username","password","refreshConnectionSettings","testrun","v1","driver","auth","basic","session","run","catch","error","unregister","state","event","action","actionType","stateData","data","rdir","console","log","baseUrl","window","location","protocol","host","href","replace","push","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","key","to","neo4jPassword","neo4jUsername","process","REACT_APP_NEO4J_IP","REACT_APP_NEO4J_USERNAME","REACT_APP_NEO4J_PASSWORD","setItem","projectName","REACT_APP_PROJECT_NAME","limitCountingHotspots","REACT_APP_LIMIT_COUNTING_HOTSPOTS","Component","Dispatcher","dispatch","source","module","exports","CustomQuery","props","_this","Object","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","popoverOpen","popovers","placement","text","readData","aplaceholder","headerData","Header","accessor","query","toggleInfo","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_4__","prototype","aggregatedData","thisBackup","isFirst","result","records","forEach","record","tmpHeader","recordConverted","keys","index","_fieldLookup","value","get","isObject","JSON","stringify","low","dataToSet","whiteSpace","context","redirect","length","react__WEBPACK_IMPORTED_MODULE_7___default","className","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","onClick","id","reactstrap__WEBPACK_IMPORTED_MODULE_14__","isOpen","target","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","graph_app_kit_components_Editor__WEBPACK_IMPORTED_MODULE_9__","options","mode","theme","onValueChange","updateStateQuery","reactstrap__WEBPACK_IMPORTED_MODULE_18__","sendQuery","color","clear","react_table__WEBPACK_IMPORTED_MODULE_19__","columns","defaultPageSize","minRows"],"mappings":"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","file":"static/js/17.784641f7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nvar AppDispatcher = require(\"../../AppDispatcher\");\n\nvar neo4jConnectionString = localStorage.getItem(\"connectionString\"); //\"localhost\";\nvar neo4jUsername = localStorage.getItem(\"username\"); //\"neo4j\";\nvar neo4jPassword = localStorage.getItem(\"password\"); //\"Test123.\";\n\nvar neo4j = null;\nvar neo4jDriver = null;\nvar neo4jSession = null;\n\nvar databaseCredentialsProvided = false;\nvar databaseCredentialsCorrect = true;\n\nfunction GenericException(message, name) {\n    this.message = message;\n    this.name = name;\n}\n\nclass DashboardAbstract extends Component {\n    static checkForDatabaseConnection() {\n        var connectionString = localStorage.getItem(\"connectionString\");\n        var neo4jPassword = localStorage.getItem(\"password\");\n        var neo4jUsername = localStorage.getItem(\"username\");\n\n        databaseCredentialsProvided =\n            connectionString !== null &&\n            connectionString !== \"\" &&\n            neo4jPassword !== null &&\n            neo4jPassword !== \"\" &&\n            neo4jUsername !== null &&\n            neo4jUsername !== \"\";\n\n        // if database credentials are provided via .env file, we load them initially\n        if (\n            !databaseCredentialsProvided &&\n            typeof process.env.REACT_APP_NEO4J_IP !== \"undefined\" &&\n            typeof process.env.REACT_APP_NEO4J_USERNAME !== \"undefined\" &&\n            typeof process.env.REACT_APP_NEO4J_PASSWORD !== \"undefined\"\n        ) {\n            localStorage.setItem(\n                \"connectionString\",\n                process.env.REACT_APP_NEO4J_IP\n            );\n            localStorage.setItem(\n                \"username\",\n                process.env.REACT_APP_NEO4J_USERNAME\n            );\n            localStorage.setItem(\n                \"password\",\n                process.env.REACT_APP_NEO4J_PASSWORD\n            );\n\n            var projectName = \"My project\";\n            if (typeof process.env.REACT_APP_PROJECT_NAME !== \"undefined\") {\n                projectName = process.env.REACT_APP_PROJECT_NAME;\n            }\n            localStorage.setItem(\"projectName\", projectName);\n\n            var limitCountingHotspots = \"70\";\n            if (\n                typeof process.env.REACT_APP_LIMIT_COUNTING_HOTSPOTS !==\n                \"undefined\"\n            ) {\n                limitCountingHotspots =\n                    process.env.REACT_APP_LIMIT_COUNTING_HOTSPOTS;\n            }\n            localStorage.setItem(\n                \"limitCountingHotspots\",\n                limitCountingHotspots\n            );\n\n            databaseCredentialsProvided = true;\n        }\n    }\n\n    componentWillMount() {\n        this.handleAction = this.handleAction.bind(this);\n        this.setState({\n            dispatcherEventId: AppDispatcher.register(this.handleAction)\n        });\n\n        return new Promise(DashboardAbstract.checkForDatabaseConnection).then(\n            this.testDatabaseCredentials()\n        );\n    }\n\n    testDatabaseCredentials() {\n        var connectionString = neo4jConnectionString;\n        var username = neo4jUsername;\n        var password = neo4jPassword;\n\n        connectionString = localStorage.getItem(\"connectionString\"); //if we're on settings page and trying to validate new credentials\n        username = localStorage.getItem(\"username\"); //if we're on settings page and trying to validate new credentials\n        password = localStorage.getItem(\"password\"); //if we're on settings page and trying to validate new credentials\n\n        if (databaseCredentialsProvided) {\n            this.refreshConnectionSettings(); //set to abstract variables\n\n            //TODO: check if there is a better method for running dashboard and test components\n            if (typeof testrun !== \"undefined\") {\n                neo4j = require(\"neo4j-driver\");\n            } else {\n                neo4j = require(\"neo4j-driver/lib/browser/neo4j-web\");\n            }\n\n            neo4jDriver = neo4j.v1.driver(\n                \"bolt://\" + connectionString,\n                neo4j.v1.auth.basic(username, password)\n            );\n            neo4jSession = neo4jDriver.session();\n\n            return neo4jSession\n                .run(\"match (n) return n limit 1\") //this should be as generic as possible =)\n                .then(function() {\n                    databaseCredentialsCorrect = true;\n                })\n                .catch(function(error) {\n                    databaseCredentialsCorrect = false;\n                    neo4jConnectionString = \"\";\n                    throw new GenericException(\n                        \"Invalid database connection data\",\n                        \"InvalidDatabaseConnectionException\"\n                    );\n                }); //handle wrong credentials\n        } //end if\n    }\n\n    componentDidMount() {}\n\n    refreshConnectionSettings() {\n        neo4jConnectionString = localStorage.getItem(\"connectionString\"); //\"localhost\";\n        neo4jUsername = localStorage.getItem(\"username\"); //\"neo4j\";\n        neo4jPassword = localStorage.getItem(\"password\"); //\"Test123.\";\n    }\n\n    componentWillUnmount() {\n        if (neo4jSession !== null) {\n            //neo4jSession.close(); //TODO: this triggers (atm) WebSocket is closed before the connection is established. > disabled\n        }\n        if (neo4jDriver !== null) {\n            //neo4jDriver.close(); //TODO: this triggers (atm) WebSocket is closed before the connection is established. > disabled\n        }\n\n        AppDispatcher.unregister(this.state.dispatcherEventId);\n    }\n\n    handleAction(event) {\n        var action = event.action;\n        switch (action.actionType) {\n            case \"SET_STATE\":\n                var stateData = event.action.data;\n                this.setState(stateData);\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        var rdir = [];\n        if (!databaseCredentialsProvided || !databaseCredentialsCorrect) {\n            console.log(\"No database credentials, redirecting to settings...\");\n            var baseUrl =\n                window.location.protocol + \"//\" + window.location.host + \"/#\";\n            var path = window.location.href.replace(baseUrl, \"\");\n            if (path !== \"/settings\") {\n                rdir.push(<Redirect key=\"dummy\" to=\"/settings\" />);\n            }\n        }\n\n        return rdir;\n    }\n}\n\nexport default DashboardAbstract;\nexport {\n    neo4j,\n    neo4jSession,\n    databaseCredentialsProvided,\n    databaseCredentialsCorrect,\n    GenericException\n};\n","var Dispatcher = require('flux').Dispatcher;\n\n// Create dispatcher instance\nvar AppDispatcher = new Dispatcher();\n\n// Convenience method to handle dispatch requests\nAppDispatcher.handleAction = function (action) {\n  this.dispatch({\n    source: 'VIEW_ACTION',\n    action: action\n  });\n}\n\nmodule.exports = AppDispatcher;","import React from \"react\";\nimport DashboardAbstract, { neo4jSession } from \"../AbstractDashboardComponent\";\n\n//import { Cypher } from \"graph-app-kit/components/Cypher\";\n//import { DriverProvider } from \"graph-app-kit/components/DriverProvider\";\n//import { Render } from \"graph-app-kit/components/Render\";\n//import { Chart } from \"graph-app-kit/components/Chart\";\nimport { CypherEditor } from \"graph-app-kit/components/Editor\";\n\nimport {\n    Button,\n    Row,\n    Col,\n    Card,\n    CardHeader,\n    CardBody,\n    Popover,\n    PopoverBody,\n    PopoverHeader\n} from \"reactstrap\";\n\nimport ReactTable from \"react-table\";\n\nclass CustomQuery extends DashboardAbstract {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            popoverOpen: false,\n            popovers: [\n                {\n                    placement: \"bottom\",\n                    text: \"Bottom\"\n                }\n            ]\n        };\n\n        this.state = {\n            readData: [\n                {\n                    aplaceholder: 'Please type a query and click \"Send\"'\n                }\n            ],\n            headerData: [\n                {\n                    Header: \"Result\",\n                    accessor: \"aplaceholder\"\n                }\n            ],\n            query:\n                \"MATCH (a:Author)-[:COMMITTED]->(c:Commit) RETURN a.name, c.message ORDER BY c.date desc LIMIT 20\"\n        };\n\n        this.toggleInfo = this.toggleInfo.bind(this);\n    }\n\n    componentWillMount() {\n        super.componentWillMount();\n    }\n\n    componentDidMount() {\n        super.componentDidMount();\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n    }\n\n    clear(event) {\n        this.setState({\n            query: \"\",\n            readData: [\n                {\n                    aplaceholder: 'Please type a query and click \"Send\"'\n                }\n            ],\n            headerData: [\n                {\n                    Header: \"Result\",\n                    accessor: \"aplaceholder\"\n                }\n            ]\n        });\n    }\n\n    sendQuery(event) {\n        var aggregatedData = [];\n        var thisBackup = this; //we need this because this is undefined in then() but we want to access the current state\n\n        var isFirst = true;\n\n        neo4jSession\n            .run(thisBackup.state.query)\n            .then(function(result) {\n                result.records.forEach(function(record) {\n                    var tmpHeader = [];\n                    var recordConverted = {};\n                    record.keys.forEach(function(key) {\n                        var index = record._fieldLookup[key];\n                        var value = record.get(index);\n                        var isObject = false;\n\n                        if (typeof value === \"object\") {\n                            value = JSON.stringify(value, null, 2);\n                            isObject = true;\n                        } else {\n                            if (value.low) {\n                                //.low if datatype is numeric\n                                value = value.low;\n                            }\n                        }\n\n                        //set keys\n                        if (\n                            isFirst &&\n                            typeof key !== \"undefined\" &&\n                            typeof key !== \"object\"\n                        ) {\n                            var dataToSet = {\n                                Header: key,\n                                accessor: key.replace(\".\", \"\")\n                            };\n                            if (isObject) {\n                                dataToSet[\"style\"] = {\n                                    whiteSpace: \"pre\"\n                                };\n                            }\n                            tmpHeader.push(dataToSet);\n                        }\n\n                        recordConverted[key.replace(\".\", \"\")] = value;\n                    });\n\n                    if (isFirst) {\n                        //make fieldlist accessable\n                        thisBackup.state.headerData = tmpHeader;\n                    }\n                    isFirst = false;\n\n                    aggregatedData.push(recordConverted);\n                });\n            })\n            .then(function(context) {\n                //console.log(aggregatedData);\n                thisBackup.setState({ readData: aggregatedData }); //reverse reverses the order of the array (because the chart is flipped this is neccesary)\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    }\n\n    updateStateQuery(event) {\n        this.state.query = event;\n    }\n\n    toggleInfo() {\n        this.setState({\n            popoverOpen: !this.state.popoverOpen\n        });\n    }\n\n    render() {\n        var redirect = super.render();\n        if (redirect.length > 0) {\n            return redirect;\n        }\n\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col xs=\"12\" md=\"12\">\n                        <Card>\n                            <CardHeader>\n                                Custom Cypher query\n                                <div className=\"card-actions\">\n                                    <button\n                                        onClick={this.toggleInfo}\n                                        id=\"Popover\"\n                                    >\n                                        <i className=\"text-muted fa fa-question-circle\" />\n                                    </button>\n                                    <Popover\n                                        placement=\"bottom\"\n                                        isOpen={this.state.popoverOpen}\n                                        target=\"Popover\"\n                                        toggle={this.toggleInfo}\n                                    >\n                                        <PopoverHeader>\n                                            Custom Cypher query\n                                        </PopoverHeader>\n                                        <PopoverBody>\n                                            The Cypher editor allows custom\n                                            queries to the Neo4j database and\n                                            returns tabular results.\n                                        </PopoverBody>\n                                    </Popover>\n                                </div>\n                            </CardHeader>\n                            <CardBody>\n                                <CypherEditor\n                                    className=\"cypheredit\"\n                                    value={this.state.query}\n                                    options={{\n                                        mode: \"cypher\",\n                                        theme: \"cypher\"\n                                    }}\n                                    onValueChange={this.updateStateQuery.bind(\n                                        this\n                                    )}\n                                />\n                                <Button\n                                    onClick={this.sendQuery.bind(this)}\n                                    className=\"btn btn-success send-query float-right\"\n                                    color=\"success\"\n                                    id=\"send\"\n                                >\n                                    Send\n                                </Button>\n                                <Button\n                                    onClick={this.clear.bind(this)}\n                                    className=\"btn btn-success send-query float-right margin-right\"\n                                    color=\"danger\"\n                                    id=\"reset\"\n                                >\n                                    Reset\n                                </Button>\n\n                                <ReactTable\n                                    data={this.state.readData}\n                                    columns={this.state.headerData}\n                                    defaultPageSize={20}\n                                    className=\"-striped -highlight clear\"\n                                    minRows={1}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default CustomQuery;\n"],"sourceRoot":""}