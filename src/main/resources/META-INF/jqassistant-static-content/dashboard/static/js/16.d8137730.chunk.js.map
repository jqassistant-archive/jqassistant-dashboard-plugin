{"version":3,"sources":["views/Dashboard/AbstractDashboardComponent.js","AppDispatcher.js","views/Dashboard/CustomCardHeader/CustomCardHeader.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js","../node_modules/reactstrap/es/ListGroup.js","../node_modules/reactstrap/es/ListGroupItem.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","api/models/Dashboard.js","views/Dashboard/Dashboard.js"],"names":["AppDispatcher","require","neo4j","localStorage","getItem","neo4jDriver","neo4jSession","databaseCredentialsProvided","databaseCredentialsCorrect","GenericException","message","name","this","DashboardAbstract","handleAction","bind","setState","dispatcherEventId","register","Promise","checkForDatabaseConnection","then","testDatabaseCredentials","connectionString","username","password","refreshConnectionSettings","testrun","v1","driver","auth","basic","session","run","catch","error","unregister","state","event","action","actionType","stateData","data","rdir","console","log","baseUrl","window","location","protocol","host","href","replace","push","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","key","to","neo4jPassword","neo4jUsername","process","REACT_APP_NEO4J_IP","REACT_APP_NEO4J_USERNAME","REACT_APP_NEO4J_PASSWORD","setItem","projectName","REACT_APP_PROJECT_NAME","limitCountingHotspots","REACT_APP_LIMIT_COUNTING_HOTSPOTS","Component","Dispatcher","dispatch","source","module","exports","CustomCardHeader","props","_this","Object","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","tooltipOpen","popoverOpen","popovers","placement","text","toggleInfo","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","$","each","hasClass","on","group","find","attr","editor","visualizationWrapper","next","removeClass","addClass","parent","i","newArray","map","element","index","_this2","headerText","cardHeaderText","showExpertMode","popoverPlacement","popoverTarget","target","popoverHeaderText","popoverBody","cssClass","toLowerCase","expertToggle","react__WEBPACK_IMPORTED_MODULE_6___default","className","id","_coreui_react__WEBPACK_IMPORTED_MODULE_12__","color","size","label","reactstrap__WEBPACK_IMPORTED_MODULE_7__","isOpen","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_8__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","__webpack_require__","g","self","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","e","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","done","value","toString","keys","object","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","obj","err","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","unwrapped","return","TypeError","info","pushTryEntry","locs","iteratorMethod","propTypes","tag","utils","flush","prop_types_default","bool","string","cssModule","ListGroup_ListGroup","Tag","attributes","objectWithoutPropertiesLoose","classes","classnames_default","react_default","esm_extends","defaultProps","es_ListGroup","ListGroupItem_propTypes","active","disabled","any","handleDisabledOnClick","preventDefault","ListGroupItem_ListGroupItem","es_ListGroupItem","asyncGeneratorStep","gen","_next","_throw","DashboardModel","classCallCheck","dashboardStructureQuery","dashboardDependenciesQuery","dashboardActivityQuery","dashboardHotspotQuery","dashboardPMDQuery","dashboardTestCoverageQuery","queryStringStructure","queryStringDependencies","queryStringActivity","queryStringHotspot","queryStringPMD","queryStringTestCoverage","queryPluginPresence","thisBackup","records","pluginPresence","git","get","jacoco","pmd","args","arguments","apply","structureMetrics","low","interfaces","enums","annotations","methods","fields","dependencyMetrics","dependencies","extends","implements","invocations","reads","writes","activityMetrics","authors","commitsWithoutMerges","commitsWithMerges","localStorageLimitCountingHotspots","hotspotMetrics","maxCommits","currentCommmits","hotspotCount","Math","round","commitHotspots","staticCodeAnalysisPMDMetrics","violations","testCoverageMetrics","overallTestCoverage","Dashboard","possibleConstructorReturn","queryStructure","queryDependencies","queryActivity","queryHotspot","queryPMD","queryTestCoverage","assertThisInitialized","dashboardModel","readPluginPresence","readStructureMetrics","readDependencyMetrics","readActivityMetrics","readHotspotMetrics","readStaticCodeAnalysisPMDMetrics","readTestCoverageMetrics","document","ready","highestBox","height","sendQuery","redirect","Row","Col","xs","sm","md","Card","CardBody","Editor","options","mode","theme","onValueChange","updateStateQueryStructure","Button","clearStructure","str","toUpperCase","updateStateQueryDependencies","clearDependencies","updateStateQueryActivity","clearActivity","updateStateQueryHotspot","clearHotspot","updateStateQueryPMD","clearPMD","updateStateQueryTestCoverage","clearTestCoverage"],"mappings":"gQAEIA,EAAgBC,EAAQ,KAMxBC,GAJwBC,aAAaC,QAAQ,oBAC7BD,aAAaC,QAAQ,YACrBD,aAAaC,QAAQ,YAE7B,MACRC,EAAc,KACdC,EAAe,KAEfC,GAA8B,EAC9BC,GAA6B,EAEjC,SAASC,EAAiBC,EAASC,GAC/BC,KAAKF,QAAUA,EACfE,KAAKD,KAAOA,MAGVE,+LA+DE,OALAD,KAAKE,aAAeF,KAAKE,aAAaC,KAAKH,MAC3CA,KAAKI,SAAS,CACVC,kBAAmBjB,EAAckB,SAASN,KAAKE,gBAG5C,IAAIK,QAAQN,EAAkBO,4BAA4BC,KAC7DT,KAAKU,6EAKT,IAAIC,EACAC,EACAC,EAMJ,GAJAF,EAAmBpB,aAAaC,QAAQ,oBACxCoB,EAAWrB,aAAaC,QAAQ,YAChCqB,EAAWtB,aAAaC,QAAQ,YAE5BG,EAgBA,OAfAK,KAAKc,4BAIDxB,EADmB,qBAAZyB,QACC1B,EAAQ,KAERA,EAAQ,KAGpBI,EAAcH,EAAM0B,GAAGC,OACnB,UAAYN,EACZrB,EAAM0B,GAAGE,KAAKC,MAAMP,EAAUC,KAElCnB,EAAeD,EAAY2B,WAGtBC,IAAI,8BACJZ,KAAK,WACFb,GAA6B,IAEhC0B,MAAM,SAASC,GAGZ,MAFA3B,GAA6B,EACL,GAClB,IAAIC,EACN,mCACA,yIASQN,aAAaC,QAAQ,oBAC7BD,aAAaC,QAAQ,YACrBD,aAAaC,QAAQ,2DAWrCJ,EAAcoC,WAAWxB,KAAKyB,MAAMpB,wDAG3BqB,GAET,OADaA,EAAMC,OACJC,YACX,IAAK,YACD,IAAIC,EAAYH,EAAMC,OAAOG,KAC7B9B,KAAKI,SAASyB,qCAQtB,IAAIE,EAAO,GACX,IAAKpC,IAAgCC,EAA4B,CAC7DoC,QAAQC,IAAI,uDACZ,IAAIC,EACAC,OAAOC,SAASC,SAAW,KAAOF,OAAOC,SAASE,KAAO,KAEhD,cADFH,OAAOC,SAASG,KAAKC,QAAQN,EAAS,KAE7CH,EAAKU,KAAKC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,IAAI,QAAQC,GAAG,eAI3C,OAAOhB,yDAtJP,IAAIpB,EAAmBpB,aAAaC,QAAQ,oBACxCwD,EAAgBzD,aAAaC,QAAQ,YACrCyD,EAAgB1D,aAAaC,QAAQ,YAWzC,KATAG,EACyB,OAArBgB,GACqB,KAArBA,GACkB,OAAlBqC,GACkB,KAAlBA,GACkB,OAAlBC,GACkB,KAAlBA,IAK0C,qBAAnCC,+CAAYC,oBAC6B,qBAAzCD,+CAAYE,0BAC6B,qBAAzCF,+CAAYG,yBACrB,CACE9D,aAAa+D,QACT,mBACAJ,+CAAYC,oBAEhB5D,aAAa+D,QACT,WACAJ,+CAAYE,0BAEhB7D,aAAa+D,QACT,WACAJ,+CAAYG,0BAGhB,IAAIE,EAAc,aACgC,qBAAvCL,+CAAYM,yBACnBD,EAAcL,+CAAYM,wBAE9BjE,aAAa+D,QAAQ,cAAeC,GAEpC,IAAIE,EAAwB,KAGxB,qBADOP,+CAAYQ,oCAGnBD,EACIP,+CAAYQ,mCAEpBnE,aAAa+D,QACT,wBACAG,GAGJ9D,GAA8B,UArDVgE,aA4JjB1D,2BChLf,IAGIb,EAAgB,IAAIwE,EAHPvE,EAAQ,KAAQuE,YAMjCxE,EAAcc,aAAe,SAAUyB,GACrC3B,KAAK6D,SAAS,CACZC,OAAQ,cACRnC,OAAQA,KAIZoC,EAAOC,QAAU5E,+KCFX6E,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAApE,KAAAiE,IACfE,EAAAC,OAAAE,EAAA,EAAAF,CAAApE,KAAAoE,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAxE,KAAMkE,KAEDzC,MAAQ,CACTgD,YAAa,EAAC,GAAO,GACrBC,aAAa,EACbC,SAAU,CACN,CACIC,UAAW,SACXC,KAAM,YAKlBV,EAAKW,WAAaX,EAAKW,WAAW3E,KAAhBiE,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAdHA,mFAkBfa,IAAE,gBAAgBC,KAAK,YACyB,IAAxCD,IAAEhF,MAAMkF,SAAS,qBACjBF,IAAEhF,MAAMmF,GAAG,SAAU,WACjB,IAAIC,EAAQJ,IAAEhF,MACTqF,KAAK,SACLC,KAAK,MACNC,EAASP,IAAE,uBACXQ,EAAuBR,IAAE,0BAER,qBAAVI,GACPG,EAAOL,SAASE,KAGhBI,GADAD,EAASP,IAAE,uBAAyBI,IACNK,KAC1B,2BAIJF,EAAOL,SAAS,qBAChBK,EAAOG,YAAY,oBACnBF,EAAqBG,SACjB,kCAEJJ,EAAOK,OAAO,cAAcD,SAAS,iBAErCJ,EAAOI,SAAS,oBAChBH,EAAqBE,YACjB,kCAEJH,EAAOK,OAAO,cAAcF,YAAY,kBAGhDV,IAAEhF,MAAM2F,SAAS,qDAKtBE,GACH,IAAMC,EAAW9F,KAAKyB,MAAMgD,YAAYsB,IAAI,SAACC,EAASC,GAClD,OAAOA,IAAUJ,IAAKG,IAE1BhG,KAAKI,SAAS,CACVqE,YAAaqB,yCAKjB9F,KAAKI,SAAS,CACVsE,aAAc1E,KAAKyB,MAAMiD,+CAIxB,IAAAwB,EAAAlG,KACDmG,EAAanG,KAAKkE,MAAMkC,eACxBC,EAAiBrG,KAAKkE,MAAMmC,eAC5BC,EAAmBtG,KAAKkE,MAAMU,UAE9B2B,EAAgBvG,KAAKkE,MAAMsC,OAE3BC,EAAoBzG,KAAKkE,MAAMuC,kBAC/BC,EAAc1G,KAAKkE,MAAMwC,YACzBC,EAAWR,EACVS,cACApE,QAAQ,MAAO,KACfA,QAAQ,6BAA6B,IAEtCqE,EAAe,GA8BnB,OA7BIR,IACAQ,EACIC,EAAAnE,EAAAC,cAAA,OAAKmE,UAAW,cACZD,EAAAnE,EAAAC,cAAA,OAAKoE,GAAI,WAAaL,GAClBG,EAAAnE,EAAAC,cAACqE,EAAA,EAAD,CACID,GAAIL,EACJI,UACI,8CACAJ,EAEJO,MAAO,YACPC,KAAM,KACNC,OAAK,KAGbN,EAAAnE,EAAAC,cAACyE,EAAA,EAAD,CACIzC,UAAU,MACV0C,OAAQtH,KAAKyB,MAAMgD,YAAY,GAC/B+B,OAAQ,WAAaG,EACrBY,OAAQ,WACJrB,EAAKqB,OAAO,KALpB,wBAeRT,EAAAnE,EAAAC,cAAC4E,EAAA,EAAD,KACKrB,EACDW,EAAAnE,EAAAC,cAAA,OAAKmE,UAAU,gBACVF,EACDC,EAAAnE,EAAAC,cAAA,UAAQ6E,QAASzH,KAAK8E,WAAYkC,GAAIT,GAClCO,EAAAnE,EAAAC,cAAA,KAAGmE,UAAU,sCAEjBD,EAAAnE,EAAAC,cAACyE,EAAA,EAAD,CACIzC,UAAU,MACV0C,OAAQtH,KAAKyB,MAAMgD,YAAY,GAC/B+B,OAAQD,EACRgB,OAAQ,WACJrB,EAAKqB,OAAO,KALpB,gBAUAT,EAAAnE,EAAAC,cAAC8E,EAAA,EAAD,CACI9C,UAAW0B,EACXgB,OAAQtH,KAAKyB,MAAMiD,YACnB8B,OAAQD,EACRgB,OAAQvH,KAAK8E,YAEbgC,EAAAnE,EAAAC,cAAC+E,EAAA,EAAD,KAAgBlB,GAChBK,EAAAnE,EAAAC,cAACgF,EAAA,EAAD,KAAclB,aA5IP/C,aAoJhBM,2BC/JfF,EAAAC,QAAiB6D,EAAQ,0BCQzB,IAAAC,EAAA,WACA,OAAA9H,MAAA,kBAAA+H,WADA,IAECC,SAAA,cAAAA,GAIDC,EAAAH,EAAAI,oBAAA9D,OAAA+D,oBAAAL,GAAAM,QAAA,yBAEAC,EAAAJ,GAAAH,EAAAI,mBAKA,GAHAJ,EAAAI,wBAAAI,EACAvE,EAAAC,QAAiB6D,EAAQ,KAEzBI,EAEAH,EAAAI,mBAAAG,OAGA,WACAP,EAAAI,mBACG,MAAAK,GACHT,EAAAI,wBAAAI,uBCvBA,SAAAE,GACA,aAEA,IAEAF,EAFAG,EAAArE,OAAAsE,UACAC,EAAAF,EAAAG,eAGAC,EAAA,oBAAAC,cAAA,GACAC,EAAAF,EAAAG,UAAA,aACAC,EAAAJ,EAAAK,eAAA,kBACAC,EAAAN,EAAAO,aAAA,gBACAC,EAAA,kBAAAtF,EACAuF,EAAAd,EAAAN,mBAEA,GAAAoB,EACAD,IAGAtF,EAAAC,QAAAsF,OAJA,EAcAA,EAAAd,EAAAN,mBAAAmB,EAAAtF,EAAAC,QAAA,IAaAuF,OAyBA,IAAAC,EAAA,iBACAC,EAAA,iBACAC,EAAA,YACAC,EAAA,YAGAC,EAAA,GAaAC,EAAA,GAEAA,EAAAd,GAAA,WACA,OAAA/I,MAGA,IAAA8J,EAAA1F,OAAA2F,eACAC,EAAAF,OAAAG,EAAA,MAEAD,OAAAvB,GAAAE,EAAAnE,KAAAwF,EAAAjB,KAGAc,EAAAG,GAGA,IAAAE,EAAAC,EAAAzB,UAAA0B,EAAA1B,UAAAtE,OAAAiG,OAAAR,GACAS,EAAA5B,UAAAwB,EAAAK,YAAAJ,EACAA,EAAAI,YAAAD,EACAH,EAAAhB,GAAAmB,EAAAE,YAAA,oBAWAlB,EAAAmB,oBAAA,SAAAC,GACA,IAAAC,EAAA,oBAAAD,KAAAH,YACA,QAAAI,QAAAL,GAEA,uBAAAK,EAAAH,aAAAG,EAAA5K,QAGAuJ,EAAAsB,KAAA,SAAAF,GAYA,OAXAtG,OAAAyG,eACAzG,OAAAyG,eAAAH,EAAAP,IAEAO,EAAAI,UAAAX,EAEAhB,KAAAuB,IACAA,EAAAvB,GAAA,sBAIAuB,EAAAhC,UAAAtE,OAAAiG,OAAAH,GACAQ,GAOApB,EAAAyB,MAAA,SAAAC,GACA,OACAC,QAAAD,IAmEAE,EAAAC,EAAAzC,WAEAyC,EAAAzC,UAAAO,GAAA,WACA,OAAAjJ,MAGAsJ,EAAA6B,gBAIA7B,EAAA8B,MAAA,SAAAC,EAAAC,EAAAvD,EAAAwD,GACA,IAAAC,EAAA,IAAAL,EAAA5B,EAAA8B,EAAAC,EAAAvD,EAAAwD,IACA,OAAAjC,EAAAmB,oBAAAa,GAAAE,EACAA,EAAA/F,OAAAhF,KAAA,SAAAgL,GACA,OAAAA,EAAAC,KAAAD,EAAAE,MAAAH,EAAA/F,UA+JAyF,EAAAhB,GACAA,EAAAf,GAAA,YAMAe,EAAAnB,GAAA,WACA,OAAA/I,MAGAkK,EAAA0B,SAAA,WACA,4BAsCAtC,EAAAuC,KAAA,SAAAC,GACA,IAAAD,EAAA,GAEA,QAAA/I,KAAAgJ,EACAD,EAAApJ,KAAAK,GAMA,OAHA+I,EAAAE,UAGA,SAAAtG,IACA,KAAAoG,EAAAG,QAAA,CACA,IAAAlJ,EAAA+I,EAAAI,MAEA,GAAAnJ,KAAAgJ,EAGA,OAFArG,EAAAkG,MAAA7I,EACA2C,EAAAiG,MAAA,EACAjG,EAQA,OADAA,EAAAiG,MAAA,EACAjG,IA0CA6D,EAAAW,SASAiC,EAAAxD,UAAA,CACA6B,YAAA2B,EACAC,MAAA,SAAAC,GAYA,GAXApM,KAAAqM,KAAA,EACArM,KAAAyF,KAAA,EAGAzF,KAAAsM,KAAAtM,KAAAuM,MAAAjE,EACAtI,KAAA0L,MAAA,EACA1L,KAAAwM,SAAA,KACAxM,KAAAyM,OAAA,OACAzM,KAAAgL,IAAA1C,EACAtI,KAAA0M,WAAAC,QAAAC,IAEAR,EACA,QAAArM,KAAAC,KAEA,MAAAD,EAAA8M,OAAA,IAAAlE,EAAAnE,KAAAxE,KAAAD,KAAA+M,OAAA/M,EAAAgN,MAAA,MACA/M,KAAAD,GAAAuI,IAKA0E,KAAA,WACAhN,KAAA0L,MAAA,EACA,IACAuB,EADAjN,KAAA0M,WAAA,GACAQ,WAEA,aAAAD,EAAAE,KACA,MAAAF,EAAAjC,IAGA,OAAAhL,KAAAoN,MAEAC,kBAAA,SAAAC,GACA,GAAAtN,KAAA0L,KACA,MAAA4B,EAGA,IAAAC,EAAAvN,KAEA,SAAAwN,EAAAC,EAAAC,GAYA,OAXAC,EAAAR,KAAA,QACAQ,EAAA3C,IAAAsC,EACAC,EAAA9H,KAAAgI,EAEAC,IAGAH,EAAAd,OAAA,OACAc,EAAAvC,IAAA1C,KAGAoF,EAGA,QAAA7H,EAAA7F,KAAA0M,WAAAV,OAAA,EAA8CnG,GAAA,IAAQA,EAAA,CACtD,IAAA+H,EAAA5N,KAAA0M,WAAA7G,GACA8H,EAAAC,EAAAV,WAEA,YAAAU,EAAAC,OAIA,OAAAL,EAAA,OAGA,GAAAI,EAAAC,QAAA7N,KAAAqM,KAAA,CACA,IAAAyB,EAAAnF,EAAAnE,KAAAoJ,EAAA,YACAG,EAAApF,EAAAnE,KAAAoJ,EAAA,cAEA,GAAAE,GAAAC,EAAA,CACA,GAAA/N,KAAAqM,KAAAuB,EAAAI,SACA,OAAAR,EAAAI,EAAAI,UAAA,GACa,GAAAhO,KAAAqM,KAAAuB,EAAAK,WACb,OAAAT,EAAAI,EAAAK,iBAEW,GAAAH,GACX,GAAA9N,KAAAqM,KAAAuB,EAAAI,SACA,OAAAR,EAAAI,EAAAI,UAAA,OAEW,KAAAD,EAKX,UAAAG,MAAA,0CAJA,GAAAlO,KAAAqM,KAAAuB,EAAAK,WACA,OAAAT,EAAAI,EAAAK,gBAQAE,OAAA,SAAAhB,EAAAnC,GACA,QAAAnF,EAAA7F,KAAA0M,WAAAV,OAAA,EAA8CnG,GAAA,IAAQA,EAAA,CACtD,IAAA+H,EAAA5N,KAAA0M,WAAA7G,GAEA,GAAA+H,EAAAC,QAAA7N,KAAAqM,MAAA1D,EAAAnE,KAAAoJ,EAAA,eAAA5N,KAAAqM,KAAAuB,EAAAK,WAAA,CACA,IAAAG,EAAAR,EACA,OAIAQ,IAAA,UAAAjB,GAAA,aAAAA,IAAAiB,EAAAP,QAAA7C,MAAAoD,EAAAH,aAGAG,EAAA,MAGA,IAAAT,EAAAS,IAAAlB,WAAA,GAIA,OAHAS,EAAAR,OACAQ,EAAA3C,MAEAoD,GACApO,KAAAyM,OAAA,OACAzM,KAAAyF,KAAA2I,EAAAH,WACArE,GAGA5J,KAAAqO,SAAAV,IAEAU,SAAA,SAAAV,EAAAW,GACA,aAAAX,EAAAR,KACA,MAAAQ,EAAA3C,IAaA,MAVA,UAAA2C,EAAAR,MAAA,aAAAQ,EAAAR,KACAnN,KAAAyF,KAAAkI,EAAA3C,IACO,WAAA2C,EAAAR,MACPnN,KAAAoN,KAAApN,KAAAgL,IAAA2C,EAAA3C,IACAhL,KAAAyM,OAAA,SACAzM,KAAAyF,KAAA,OACO,WAAAkI,EAAAR,MAAAmB,IACPtO,KAAAyF,KAAA6I,GAGA1E,GAEA2E,OAAA,SAAAN,GACA,QAAApI,EAAA7F,KAAA0M,WAAAV,OAAA,EAA8CnG,GAAA,IAAQA,EAAA,CACtD,IAAA+H,EAAA5N,KAAA0M,WAAA7G,GAEA,GAAA+H,EAAAK,eAGA,OAFAjO,KAAAqO,SAAAT,EAAAV,WAAAU,EAAAU,UACA1B,EAAAgB,GACAhE,IAIAtI,MAAA,SAAAuM,GACA,QAAAhI,EAAA7F,KAAA0M,WAAAV,OAAA,EAA8CnG,GAAA,IAAQA,EAAA,CACtD,IAAA+H,EAAA5N,KAAA0M,WAAA7G,GAEA,GAAA+H,EAAAC,WAAA,CACA,IAAAF,EAAAC,EAAAV,WAEA,aAAAS,EAAAR,KAAA,CACA,IAAAqB,EAAAb,EAAA3C,IACA4B,EAAAgB,GAGA,OAAAY,GAMA,UAAAN,MAAA,0BAEAO,cAAA,SAAAC,EAAAC,EAAAC,GAaA,OAZA5O,KAAAwM,SAAA,CACAxD,SAAAiB,EAAAyE,GACAC,aACAC,WAGA,SAAA5O,KAAAyM,SAGAzM,KAAAgL,IAAA1C,GAGAsB,IAlpBA,SAAAL,EAAA8B,EAAAC,EAAAvD,EAAAwD,GAEA,IAAAsD,EAAAvD,KAAA5C,qBAAA0B,EAAAkB,EAAAlB,EACA0E,EAAA1K,OAAAiG,OAAAwE,EAAAnG,WACA6E,EAAA,IAAArB,EAAAX,GAAA,IAIA,OADAuD,EAAAC,QA8LA,SAAA1D,EAAAtD,EAAAwF,GACA,IAAA9L,EAAA+H,EACA,gBAAAiD,EAAAzB,GACA,GAAAvJ,IAAAiI,EACA,UAAAwE,MAAA,gCAGA,GAAAzM,IAAAkI,EAAA,CACA,aAAA8C,EACA,MAAAzB,EAKA,OAAAgE,IAMA,IAHAzB,EAAAd,SACAc,EAAAvC,QAEA,CACA,IAAAwB,EAAAe,EAAAf,SAEA,GAAAA,EAAA,CACA,IAAAyC,EAAAC,EAAA1C,EAAAe,GAEA,GAAA0B,EAAA,CACA,GAAAA,IAAArF,EAAA,SACA,OAAAqF,GAIA,YAAA1B,EAAAd,OAGAc,EAAAjB,KAAAiB,EAAAhB,MAAAgB,EAAAvC,SACS,aAAAuC,EAAAd,OAAA,CACT,GAAAhL,IAAA+H,EAEA,MADA/H,EAAAkI,EACA4D,EAAAvC,IAGAuC,EAAAF,kBAAAE,EAAAvC,SACS,WAAAuC,EAAAd,QACTc,EAAAY,OAAA,SAAAZ,EAAAvC,KAGAvJ,EAAAiI,EACA,IAAAiE,EAAAwB,EAAA9D,EAAAtD,EAAAwF,GAEA,cAAAI,EAAAR,KAAA,CAKA,GAFA1L,EAAA8L,EAAA7B,KAAA/B,EAAAF,EAEAkE,EAAA3C,MAAApB,EACA,SAGA,OACA+B,MAAAgC,EAAA3C,IACAU,KAAA6B,EAAA7B,MAES,UAAAiC,EAAAR,OACT1L,EAAAkI,EAGA4D,EAAAd,OAAA,QACAc,EAAAvC,IAAA2C,EAAA3C,OAlQAoE,CAAA/D,EAAAtD,EAAAwF,GACAuB,EAcA,SAAAK,EAAAE,EAAAC,EAAAtE,GACA,IACA,OACAmC,KAAA,SACAnC,IAAAqE,EAAA7K,KAAA8K,EAAAtE,IAEK,MAAAuE,GACL,OACApC,KAAA,QACAnC,IAAAuE,IAgBA,SAAAnF,KAEA,SAAAE,KAEA,SAAAH,KAyBA,SAAAe,EAAAxC,GACA,0BAAAiE,QAAA,SAAAF,GACA/D,EAAA+D,GAAA,SAAAzB,GACA,OAAAhL,KAAA+O,QAAAtC,EAAAzB,MAqCA,SAAAG,EAAA2D,GAgCA,IAAAU,EA4BAxP,KAAA+O,QA1BA,SAAAtC,EAAAzB,GACA,SAAAyE,IACA,WAAAlP,QAAA,SAAAmP,EAAAC,IAnCA,SAAAC,EAAAnD,EAAAzB,EAAA0E,EAAAC,GACA,IAAAhC,EAAAwB,EAAAL,EAAArC,GAAAqC,EAAA9D,GAEA,aAAA2C,EAAAR,KAEO,CACP,IAAA1B,EAAAkC,EAAA3C,IACAW,EAAAF,EAAAE,MAEA,OAAAA,GAAA,kBAAAA,GAAAhD,EAAAnE,KAAAmH,EAAA,WACApL,QAAAmP,QAAA/D,EAAAV,SAAAxK,KAAA,SAAAkL,GACAiE,EAAA,OAAAjE,EAAA+D,EAAAC,IACW,SAAAJ,GACXK,EAAA,QAAAL,EAAAG,EAAAC,KAIApP,QAAAmP,QAAA/D,GAAAlL,KAAA,SAAAoP,GAIApE,EAAAE,MAAAkE,EACAH,EAAAjE,IACS,SAAAlK,GAGT,OAAAqO,EAAA,QAAArO,EAAAmO,EAAAC,KAtBAA,EAAAhC,EAAA3C,KAgCA4E,CAAAnD,EAAAzB,EAAA0E,EAAAC,KAIA,OAAAH,EAYAA,IAAA/O,KAAAgP,EAEAA,QAwGA,SAAAP,EAAA1C,EAAAe,GACA,IAAAd,EAAAD,EAAAxD,SAAAuE,EAAAd,QAEA,GAAAA,IAAAnE,EAAA,CAKA,GAFAiF,EAAAf,SAAA,KAEA,UAAAe,EAAAd,OAAA,CACA,GAAAD,EAAAxD,SAAA8G,SAGAvC,EAAAd,OAAA,SACAc,EAAAvC,IAAA1C,EACA4G,EAAA1C,EAAAe,GAEA,UAAAA,EAAAd,QAGA,OAAA7C,EAIA2D,EAAAd,OAAA,QACAc,EAAAvC,IAAA,IAAA+E,UAAA,kDAGA,OAAAnG,EAGA,IAAA+D,EAAAwB,EAAA1C,EAAAD,EAAAxD,SAAAuE,EAAAvC,KAEA,aAAA2C,EAAAR,KAIA,OAHAI,EAAAd,OAAA,QACAc,EAAAvC,IAAA2C,EAAA3C,IACAuC,EAAAf,SAAA,KACA5C,EAGA,IAAAoG,EAAArC,EAAA3C,IAEA,OAAAgF,EAOAA,EAAAtE,MAGA6B,EAAAf,EAAAmC,YAAAqB,EAAArE,MAEA4B,EAAA9H,KAAA+G,EAAAoC,QAOA,WAAArB,EAAAd,SACAc,EAAAd,OAAA,OACAc,EAAAvC,IAAA1C,GASAiF,EAAAf,SAAA,KACA5C,GANAoG,GAxBAzC,EAAAd,OAAA,QACAc,EAAAvC,IAAA,IAAA+E,UAAA,oCACAxC,EAAAf,SAAA,KACA5C,GA+CA,SAAAqG,EAAAC,GACA,IAAAtC,EAAA,CACAC,OAAAqC,EAAA,IAGA,KAAAA,IACAtC,EAAAI,SAAAkC,EAAA,IAGA,KAAAA,IACAtC,EAAAK,WAAAiC,EAAA,GACAtC,EAAAU,SAAA4B,EAAA,IAGAlQ,KAAA0M,WAAAjK,KAAAmL,GAGA,SAAAhB,EAAAgB,GACA,IAAAD,EAAAC,EAAAV,YAAA,GACAS,EAAAR,KAAA,gBACAQ,EAAA3C,IACA4C,EAAAV,WAAAS,EAGA,SAAAzB,EAAAX,GAIAvL,KAAA0M,WAAA,EACAmB,OAAA,SAEAtC,EAAAoB,QAAAsD,EAAAjQ,MACAA,KAAAmM,OAAA,GAgCA,SAAAlC,EAAAyE,GACA,GAAAA,EAAA,CACA,IAAAyB,EAAAzB,EAAA3F,GAEA,GAAAoH,EACA,OAAAA,EAAA3L,KAAAkK,GAGA,uBAAAA,EAAAjJ,KACA,OAAAiJ,EAGA,IAAA5B,MAAA4B,EAAA1C,QAAA,CACA,IAAAnG,GAAA,EACAJ,EAAA,SAAAA,IACA,OAAAI,EAAA6I,EAAA1C,QACA,GAAArD,EAAAnE,KAAAkK,EAAA7I,GAGA,OAFAJ,EAAAkG,MAAA+C,EAAA7I,GACAJ,EAAAiG,MAAA,EACAjG,EAMA,OAFAA,EAAAkG,MAAArD,EACA7C,EAAAiG,MAAA,EACAjG,GAGA,OAAAA,UAKA,OACAA,KAAAuJ,GAMA,SAAAA,IACA,OACArD,MAAArD,EACAoD,MAAA,IAxfA,CAsrBA,WACA,OAAA1L,MAAA,kBAAA+H,WADA,IAECC,SAAA,cAAAA,uPCxrBDoI,EAAA,CACAC,IAAOC,EAAA,EACPC,MAASC,EAAA7N,EAAS8N,KAClB1J,UAAayJ,EAAA7N,EAAS+N,OACtBC,UAAaH,EAAA7N,EAASmJ,QAMlB8E,EAAS,SAAA1M,GACb,IAAA6C,EAAA7C,EAAA6C,UACA4J,EAAAzM,EAAAyM,UACAE,EAAA3M,EAAAmM,IACAE,EAAArM,EAAAqM,MACAO,EAAmB1M,OAAA2M,EAAA,EAAA3M,CAA6BF,EAAA,yCAEhD8M,EAAgB5M,OAAAkM,EAAA,EAAAlM,CAAgB6M,IAAUlK,EAAA,eAAAwJ,GAAA,oBAAAI,GAC1C,OAASO,EAAAvO,EAAKC,cAAAiO,EAAoBzM,OAAA+M,EAAA,EAAA/M,CAAQ,GAAG0M,EAAA,CAC7C/J,UAAAiK,MAIAJ,EAASR,YACTQ,EAASQ,aAlBT,CACAf,IAAA,MAkBe,IAAAgB,EAAA,ECzBXC,EAAS,CACbjB,IAAOC,EAAA,EACPiB,OAAUf,EAAA7N,EAAS8N,KACnBe,SAAYhB,EAAA7N,EAAS8N,KACrBvJ,MAASsJ,EAAA7N,EAAS+N,OAClB/O,OAAU6O,EAAA7N,EAAS8N,KACnB1J,UAAayJ,EAAA7N,EAAS8O,IACtBd,UAAaH,EAAA7N,EAASmJ,QAMtB4F,EAAA,SAAAnJ,GACAA,EAAAoJ,kBAGIC,EAAa,SAAA1N,GACjB,IAAA6C,EAAA7C,EAAA6C,UACA4J,EAAAzM,EAAAyM,UACAE,EAAA3M,EAAAmM,IACAkB,EAAArN,EAAAqN,OACAC,EAAAtN,EAAAsN,SACA7P,EAAAuC,EAAAvC,OACAuF,EAAAhD,EAAAgD,MACA4J,EAAmB1M,OAAA2M,EAAA,EAAA3M,CAA6BF,EAAA,sEAEhD8M,EAAgB5M,OAAAkM,EAAA,EAAAlM,CAAgB6M,IAAUlK,IAAAwK,GAAA,WAAAC,GAAA,aAAA7P,GAAA,2BAAAuF,GAAA,mBAAAA,EAAA,mBAAAyJ,GAM1C,OAJAa,IACAV,EAAArJ,QAAAiK,GAGSR,EAAAvO,EAAKC,cAAAiO,EAAoBzM,OAAA+M,EAAA,EAAA/M,CAAQ,GAAG0M,EAAA,CAC7C/J,UAAAiK,MAIAY,EAAaxB,UAAakB,EAC1BM,EAAaR,aA9BG,CAChBf,IAAA,MA8Be,IAAAwB,EAAA,oBC9Cf,SAAAC,EAAAC,EAAArC,EAAAC,EAAAqC,EAAAC,EAAAnP,EAAAkI,GACA,IACA,IAAAgF,EAAA+B,EAAAjP,GAAAkI,GACAW,EAAAqE,EAAArE,MACG,MAAApK,GAEH,YADAoO,EAAApO,GAIAyO,EAAAtE,KACAgE,EAAA/D,GAEApL,QAAAmP,QAAA/D,GAAAlL,KAAAuR,EAAAC,OC8WeC,aAvXX,SAAAA,EAAYhO,GAAQE,OAAA+N,EAAA,EAAA/N,CAAApE,KAAAkS,GAChB,IAAME,EAGF,klBAkBJ7S,aAAa+D,QACT,qCACA8O,GAGJ,IAAMC,EAGF,2xBAkBJ9S,aAAa+D,QACT,wCACA+O,GAGJ,IAAMC,EAGF,oPASJ/S,aAAa+D,QACT,oCACAgP,GAGJ,IAAMC,EAEF,iPACJhT,aAAa+D,QACT,mCACAiP,GAGJ,IAAMC,EAEF,+GACJjT,aAAa+D,QAAQ,+BAAgCkP,GAErD,IAAMC,EAEF,wLACJlT,aAAa+D,QACT,yCACAmP,GAYJzS,KAAKyB,MAAQ,CACTiR,qBAAsBN,EACtBO,wBAAyBN,EACzBO,oBAAqBN,EACrBO,mBAAoBN,EACpBO,eAAgBN,EAChBO,wBAAyBN,EACzBO,oBAfF,kMAkBGzT,aAAaC,QAAQ,oCAMtBQ,KAAKyB,MAAMiR,qBAAuBnT,aAAaC,QAC3C,oCANJD,aAAa+D,QACT,mCACAtD,KAAKyB,MAAMiR,sBAQdnT,aAAaC,QAAQ,uCAMtBQ,KAAKyB,MAAMkR,wBAA0BpT,aAAaC,QAC9C,uCANJD,aAAa+D,QACT,sCACAtD,KAAKyB,MAAMkR,yBAQdpT,aAAaC,QAAQ,mCAMtBQ,KAAKyB,MAAMmR,oBAAsBrT,aAAaC,QAC1C,mCANJD,aAAa+D,QACT,kCACAtD,KAAKyB,MAAMmR,qBAQdrT,aAAaC,QAAQ,kCAMtBQ,KAAKyB,MAAMoR,mBAAqBtT,aAAaC,QACzC,kCANJD,aAAa+D,QACT,iCACAtD,KAAKyB,MAAMoR,oBAQdtT,aAAaC,QAAQ,8BAMtBQ,KAAKyB,MAAMqR,eAAiBvT,aAAaC,QACrC,8BANJD,aAAa+D,QACT,6BACAtD,KAAKyB,MAAMqR,gBAQdvT,aAAaC,QAAQ,wCAMtBQ,KAAKyB,MAAMsR,wBAA0BxT,aAAaC,QAC9C,wCANJD,aAAa+D,QACT,uCACAtD,KAAKyB,MAAMsR,8FD3JZ1D,2BCoKc4D,yFAEjB1S,QAAQmP,QACZhQ,IACC2B,IAAIrB,KAAKyB,MAAMuR,qBACfvS,KAAK,SAASgL,GACbA,EAAOyH,QAAQvG,QAAQ,SAASgB,GAC9BwF,EAAiB,CACfC,IAAKzF,EAAO0F,IAAI,OAChBC,OAAQ3F,EAAO0F,IAAI,UACnBE,IAAK5F,EAAO0F,IAAI,YAIrB5S,KAAK,SAAS8M,GACb0F,EAAW7S,SAAS,CAAC+S,eAAgBA,MAEtC7R,MAAM,SAASC,GACdS,QAAQC,IAAIV,sCAEPhB,QAAQmP,QAAQuD,iDDvL/B,WACA,IAAAlL,EAAA/H,KACAwT,EAAAC,UACA,WAAAlT,QAAA,SAAAmP,EAAAC,GACA,IAAAoC,EAAA1C,EAAAqE,MAAA3L,EAAAyL,GAEA,SAAAxB,EAAArG,GACAmG,EAAAC,EAAArC,EAAAC,EAAAqC,EAAAC,EAAA,OAAAtG,GAGA,SAAAsG,EAAA1C,GACAuC,EAAAC,EAAArC,EAAAC,EAAAqC,EAAAC,EAAA,QAAA1C,GAGAyC,OAAA1J,yGC4KyB2K,GACjB,IAAIU,EAAmB,GAEvBjU,IACK2B,IAAIrB,KAAKyB,MAAMiR,sBACfjS,KAAK,SAASgL,GACXA,EAAOyH,QAAQvG,QAAQ,SAASgB,GAC5BgG,EAAmB,CACf3C,QAASrD,EAAO0F,IAAI,GAAGO,IACvBC,WAAYlG,EAAO0F,IAAI,GAAGO,IAC1BE,MAAOnG,EAAO0F,IAAI,GAAGO,IACrBG,YAAapG,EAAO0F,IAAI,GAAGO,IAC3BI,QAASrG,EAAO0F,IAAI,GAAGO,IACvBnG,IAAKE,EAAO0F,IAAI,GAAGO,IACnBK,OAAQtG,EAAO0F,IAAI,GAAGO,SAMjCnT,KAAK,SAAS8M,GACX0F,EAAW7S,SAAS,CAAEuT,iBAAkBA,MAE3CrS,MAAM,SAASC,GACZS,QAAQC,IAAIV,mDAIF0R,GAClB,IAAIiB,EAAoB,GAExBxU,IACK2B,IAAIrB,KAAKyB,MAAMkR,yBACflS,KAAK,SAASgL,GACXA,EAAOyH,QAAQvG,QAAQ,SAASgB,GAC5BuG,EAAoB,CAChBC,aAAcxG,EAAO0F,IAAI,GAAGO,IAC5BQ,QAASzG,EAAO0F,IAAI,GAAGO,IACvBS,WAAY1G,EAAO0F,IAAI,GAAGO,IAC1BU,YAAa3G,EAAO0F,IAAI,GAAGO,IAC3BW,MAAO5G,EAAO0F,IAAI,GAAGO,IACrBY,OAAQ7G,EAAO0F,IAAI,GAAGO,SAMjCnT,KAAK,SAAS8M,GACX0F,EAAW7S,SAAS,CAAE8T,kBAAmBA,MAE5C5S,MAAM,SAASC,GACZS,QAAQC,IAAIV,iDAIJ0R,GAChB,IAAIwB,EAAkB,GAEtB/U,IACK2B,IAAIrB,KAAKyB,MAAMmR,qBACfnS,KAAK,SAASgL,GACXA,EAAOyH,QAAQvG,QAAQ,SAASgB,GAC5B8G,EAAkB,CACdC,QAAS/G,EAAO0F,IAAI,GAAGO,IACvBe,qBAAsBhH,EAAO0F,IAAI,GAAGO,IACpCgB,kBAAmBjH,EAAO0F,IAAI,GAAGO,SAM5CnT,KAAK,SAAS8M,GACX0F,EAAW7S,SAAS,CAAEqU,gBAAiBA,MAE1CnT,MAAM,SAASC,GACZS,QAAQC,IAAIV,gDAIL0R,GACf,IAEI4B,EAAoCtV,aAAaC,QAFV,yBAKvCsV,EAAiB,GAErBpV,IACK2B,IAAIrB,KAAKyB,MAAMoR,oBACfpS,KAAK,SAASgL,GACX,IAAIsJ,EAAa,EAEjBtJ,EAAOyH,QAAQvG,QAAQ,SAASgB,GAC5B,IAAIqH,EAAkBrH,EAAO0F,IAAI,GAAGO,IAEhCoB,EAAkBD,IAClBA,EAAaC,KAIrB,IAAIC,EAAe,EACnBxJ,EAAOyH,QAAQvG,QAAQ,SAASgB,GAC5B,IAAIqH,EAAkBrH,EAAO0F,IAAI,GAAGO,IAGhCsB,KAAKC,MAAOH,EAAkBD,EAAc,MAC5CF,GAEAI,MAIRH,EAAiB,CACbM,eAAgBH,KAGvBxU,KAAK,SAAS8M,GACX0F,EAAW7S,SAAS,CAChB0U,eAAgBA,MAGvBxT,MAAM,SAASC,GACZS,QAAQC,IAAIV,8DAIS0R,GAC7B,IAAIoC,EAA+B,GAEnC3V,IACK2B,IAAIrB,KAAKyB,MAAMqR,gBACfrS,KAAK,SAASgL,GACXA,EAAOyH,QAAQvG,QAAQ,SAASgB,GAC5B0H,EAA+B,CAC3BC,WAAY3H,EAAO0F,IAAI,GAAGO,SAMrCnT,KAAK,SAAS8M,GACX0F,EAAW7S,SAAS,CAChBiV,6BAA8BA,MAGrC/T,MAAM,SAASC,GACZS,QAAQC,IAAIV,qDAIA0R,GACpB,IAAIsC,EAAsB,GAE1B7V,IACK2B,IAAIrB,KAAKyB,MAAMsR,yBACftS,KAAK,SAASgL,GACXA,EAAOyH,QAAQvG,QAAQ,SAASgB,GAC5B4H,EAAsB,CAClBC,oBAAqB7H,EAAO0F,IAAI,GAAGO,SAM9CnT,KAAK,SAAS8M,GACX0F,EAAW7S,SAAS,CAChBmV,oBAAqBA,MAG5BjU,MAAM,SAASC,GACZS,QAAQC,IAAIV,gCCnWxBnC,EAAgBC,EAAQ,KAEtBoW,cACF,SAAAA,EAAYvR,GAAO,IAAAC,EAAA,OAAAC,OAAA+N,EAAA,EAAA/N,CAAApE,KAAAyV,IACftR,EAAAC,OAAAsR,EAAA,EAAAtR,CAAApE,KAAAoE,OAAA2F,EAAA,EAAA3F,CAAAqR,GAAAjR,KAAAxE,KAAMkE,KAEDzC,MAAQ,CACTkU,eAAgB,GAChBC,kBAAmB,GACnBC,cAAe,GACfC,aAAc,GACdC,SAAU,GACVC,kBAAmB,GACnBrC,iBAAkB,CACd3C,QAAS,UACT6C,WAAY,UACZC,MAAO,UACPC,YAAa,UACbC,QAAS,UACTvG,IAAK,UACLwG,OAAQ,WAEZC,kBAAmB,CACfC,aAAc,UACdC,QAAS,UACTC,WAAY,UACZC,YAAa,UACbC,MAAO,UACPC,OAAQ,WAEZC,gBAAiB,CACbC,QAAS,UACTC,qBAAsB,UACtBC,kBAAmB,WAEvBE,eAAgB,CACZM,eAAgB,WAEpBC,6BAA8B,CAC1BC,WAAY,WAEhBC,oBAAqB,CACjBC,oBAAqB,WAEzBrC,eAAgB,CACdC,KAAK,EACLE,QAAQ,EACRC,KAAK,IAIXpP,EAAKW,WAAaX,EAAKW,WAAW3E,KAAhBiE,OAAA6R,EAAA,EAAA7R,QAAA6R,EAAA,EAAA7R,CAAAD,KAhDHA,mFAsDf,GAFAC,OAAAiP,EAAA,EAAAjP,QAAA2F,EAAA,EAAA3F,CAAAqR,EAAA/M,WAAA,oBAAA1I,MAAAwE,KAAAxE,MAEIL,IAA6B,CAC7B,IAAIuW,EAAiB,IAAIhE,EAEzBgE,EAAeC,mBAAmBnW,MAAMS,KAAK,SAAS8M,GACpD2I,EAAeE,qBAAqB7I,GACpC2I,EAAeG,sBAAsB9I,GAClCA,EAAQ9L,MAAM0R,eAAeC,MAC9B8C,EAAeI,oBAAoB/I,GACnC2I,EAAeK,mBAAmBhJ,IAEjCA,EAAQ9L,MAAM0R,eAAeI,KAC9B2C,EAAeM,iCAAiCjJ,GAE/CA,EAAQ9L,MAAM0R,eAAeG,QAC9B4C,EAAeO,wBAAwBlJ,GAGzCA,EAAQnN,SAAS,CACbuV,eAAgBpW,aAAaC,QACzB,oCAEJoW,kBAAmBrW,aAAaC,QAC5B,uCAEJqW,cAAetW,aAAaC,QACxB,mCAEJsW,aAAcvW,aAAaC,QACvB,kCAEJuW,SAAUxW,aAAaC,QAAQ,8BAC/BwW,kBAAmBzW,aAAaC,QAC5B,4CAMdwF,IAAE0R,UAAUC,MAAM,WAEd3R,IAAE,cAAcC,KAAK,WAEjB,IAAI2R,EAAa,EAGb5R,IAAEhF,MAAM6W,SAAWD,IACnBA,EAAa5R,IAAEhF,MAAM6W,UAIzB7R,IAAE,cAAc6R,OAAOD,sDAM/BxS,OAAAiP,EAAA,EAAAjP,QAAA2F,EAAA,EAAA3F,CAAAqR,EAAA/M,WAAA,uBAAA1I,MAAAwE,KAAAxE,2CAGS0B,GAET,OADaA,EAAMC,OACJC,YACX,IAAK,eACD,GAAIjC,IAA6B,CAC7B,IAAIuW,EAAiB,IAAIhE,EACzBgE,EAAeE,qBAAqBpW,MACpCkW,EAAeG,sBAAsBrW,MACrCkW,EAAeI,oBAAoBtW,MACnCkW,EAAeM,iCAAiCxW,MAChDkW,EAAeK,mBAAmBvW,MAClCkW,EAAeO,wBAAwBzW,MAE3C,MACJ,QACI,OAAO,0CAIJ0B,GACXnC,aAAa+D,QACT,mCACA/D,aAAaC,QAAQ,uCAEzBQ,KAAK8W,UAAU9W,gDAGD0B,GACdnC,aAAa+D,QACT,sCACA/D,aAAaC,QAAQ,0CAEzBQ,KAAK8W,UAAU9W,4CAGL0B,GACVnC,aAAa+D,QACT,kCACA/D,aAAaC,QAAQ,sCAEzBQ,KAAK8W,UAAU9W,2CAGN0B,GACTnC,aAAa+D,QACT,iCACA/D,aAAaC,QAAQ,qCAEzBQ,KAAK8W,UAAU9W,uCAGV0B,GACLnC,aAAa+D,QACT,6BACA/D,aAAaC,QAAQ,iCAEzBQ,KAAK8W,UAAU9W,gDAGD0B,GACdnC,aAAa+D,QACT,uCACA/D,aAAaC,QAAQ,2CAEzBQ,KAAK8W,UAAU9W,wCAGT0B,GACN1B,KAAKI,SAAS,CACVuV,eAAgBpW,aAAaC,QACzB,oCAEJoW,kBAAmBrW,aAAaC,QAC5B,uCAEJqW,cAAetW,aAAaC,QACxB,mCAEJsW,aAAcvW,aAAaC,QACvB,kCAEJuW,SAAUxW,aAAaC,QAAQ,8BAC/BwW,kBAAmBzW,aAAaC,QAC5B,0CAIRJ,EAAcc,aAAa,CACvB0B,WAAY,eACZE,KAAM,CACF4Q,qBAAsBnT,aAAaC,QAC/B,oCAEJmT,wBAAyBpT,aAAaC,QAClC,uCAEJoT,oBAAqBrT,aAAaC,QAC9B,mCAEJqT,mBAAoBtT,aAAaC,QAC7B,kCAEJsT,eAAgBvT,aAAaC,QACzB,8BAEJuT,wBAAyBxT,aAAaC,QAClC,6FAMUkC,GACtBnC,aAAa+D,QAAQ,mCAAoC5B,wDAGhCA,GACzBnC,aAAa+D,QAAQ,sCAAuC5B,oDAGvCA,GACrBnC,aAAa+D,QAAQ,kCAAmC5B,mDAGpCA,GACpBnC,aAAa+D,QAAQ,iCAAkC5B,+CAGvCA,GAChBnC,aAAa+D,QAAQ,6BAA8B5B,wDAG1BA,GACzBnC,aAAa+D,QAAQ,uCAAwC5B,wCAI7D1B,KAAKI,SAAS,CACVsE,aAAc1E,KAAKyB,MAAMiD,+CAK7B,IAAIqS,EAAQ3S,OAAAiP,EAAA,EAAAjP,QAAA2F,EAAA,EAAA3F,CAAAqR,EAAA/M,WAAA,SAAA1I,MAAAwE,KAAAxE,MACZ,OAAI+W,EAAS/K,OAAS,EACX+K,EAIP7F,EAAAvO,EAAAC,cAAA,OAAKmE,UAAU,6BACXmK,EAAAvO,EAAAC,cAACoU,EAAA,EAAD,KACI9F,EAAAvO,EAAAC,cAACqU,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACnBlG,EAAAvO,EAAAC,cAACyU,EAAA,EAAD,KACInG,EAAAvO,EAAAC,cAACqB,EAAA,EAAD,CACImC,eAAgB,eAChBC,gBAAgB,EAChBzB,UAAW,SACX4B,OAAQ,WACRC,kBAAmB,eACnBC,YACI,0JAGRwK,EAAAvO,EAAAC,cAAC0U,EAAA,EAAD,KACIpG,EAAAvO,EAAAC,cAAA,OACImE,UACI,oDAGJmK,EAAAvO,EAAAC,cAAC2U,EAAA,aAAD,CACIxQ,UAAU,aACV4E,MAAO3L,KAAKyB,MAAMkU,eAClB6B,QAAS,CACLC,KAAM,SACNC,MAAO,UAEXC,cAAe3X,KAAK4X,0BAA0BzX,KAC1CH,QAGRkR,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAK8W,UAAU3W,KAAKH,MAC7B+G,UAAU,yCACVG,MAAM,UACNF,GAAG,QAJP,QAQAkK,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAK8X,eAAe3X,KAAKH,MAClC+G,UAAU,sDACVG,MAAM,SACNF,GAAG,SAJP,UASJkK,EAAAvO,EAAAC,cAAA,KACIL,KAAK,2BACLwE,UAAW,uBAEXmK,EAAAvO,EAAAC,cAAA,mCACAsO,EAAAvO,EAAAC,cAACyO,EAAD,CAAWtK,UAAU,iBAChB3C,OAAOyH,KACJ7L,KAAKyB,MAAMkS,kBACb5N,IAAI,SAASjD,GACX,IAAIsE,EAAQtE,EAEPN,QAAQ,WAAY,OACpBoE,cAEApE,QAAQ,KAAM,SAASuV,GACpB,OAAOA,EAAIC,gBAGnB,OACI9G,EAAAvO,EAAAC,cAACiP,EAAD,CACI/O,IAAKA,EACLiE,UAAU,2BAETK,EAAO,IACR8J,EAAAvO,EAAAC,cAAA,OAAKmE,UAAU,eAEP/G,KAAKyB,MACAkS,iBACD7Q,MAMrB9C,QAIXkR,EAAAvO,EAAAC,cAAA,OACImE,UACI,oDAGJmK,EAAAvO,EAAAC,cAAC2U,EAAA,aAAD,CACIxQ,UAAU,aACV4E,MAAO3L,KAAKyB,MAAMmU,kBAClB4B,QAAS,CACLC,KAAM,SACNC,MAAO,UAEXC,cAAe3X,KAAKiY,6BAA6B9X,KAC7CH,QAGRkR,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAK8W,UAAU3W,KAAKH,MAC7B+G,UAAU,yCACVG,MAAM,UACNF,GAAG,QAJP,QAQAkK,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAKkY,kBAAkB/X,KAC5BH,MAEJ+G,UAAU,sDACVG,MAAM,SACNF,GAAG,SANP,UAYJkK,EAAAvO,EAAAC,cAAA,KACIL,KAAK,8BACLwE,UAAW,uBAEXmK,EAAAvO,EAAAC,cAAA,oCACAsO,EAAAvO,EAAAC,cAACyO,EAAD,KACKjN,OAAOyH,KACJ7L,KAAKyB,MAAMyS,mBACbnO,IAAI,SAASjD,GACX,IAAIsE,EAAQtE,EAEPN,QAAQ,WAAY,OACpBoE,cAEApE,QAAQ,KAAM,SAASuV,GACpB,OAAOA,EAAIC,gBAGnB,OACI9G,EAAAvO,EAAAC,cAACiP,EAAD,CACI/O,IAAKA,EACLiE,UAAU,2BAETK,EAAO,IACR8J,EAAAvO,EAAAC,cAAA,OAAKmE,UAAU,eAEP/G,KAAKyB,MACAyS,kBACDpR,MAMrB9C,WAMtBA,KAAKyB,MAAM0R,eAAeC,KAC3BlC,EAAAvO,EAAAC,cAACqU,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACnBlG,EAAAvO,EAAAC,cAACyU,EAAA,EAAD,KACInG,EAAAvO,EAAAC,cAACqB,EAAA,EAAD,CACImC,eAAgB,sBAChBC,gBAAgB,EAChBzB,UAAW,SACX4B,OAAQ,WACRC,kBAAmB,sBACnBC,YACI,oGAGRwK,EAAAvO,EAAAC,cAAC0U,EAAA,EAAD,KACIpG,EAAAvO,EAAAC,cAAA,OACImE,UACI,2DAGJmK,EAAAvO,EAAAC,cAAC2U,EAAA,aAAD,CACIxQ,UAAU,aACV4E,MAAO3L,KAAKyB,MAAMoU,cAClB2B,QAAS,CACLC,KAAM,SACNC,MAAO,UAEXC,cAAe3X,KAAKmY,yBAAyBhY,KACzCH,QAGRkR,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAK8W,UAAU3W,KAAKH,MAC7B+G,UAAU,yCACVG,MAAM,UACNF,GAAG,QAJP,QAQAkK,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAKoY,cAAcjY,KAAKH,MACjC+G,UAAU,sDACVG,MAAM,SACNF,GAAG,SAJP,UASJkK,EAAAvO,EAAAC,cAAA,KACIL,KAAK,iCACLwE,UAAW,uBAEXmK,EAAAvO,EAAAC,cAAA,kCACAsO,EAAAvO,EAAAC,cAACyO,EAAD,KACKjN,OAAOyH,KACJ7L,KAAKyB,MAAMgT,iBACb1O,IAAI,SAASjD,GACX,IAAIsE,EAAQtE,EAEPN,QAAQ,WAAY,OACpBoE,cAEApE,QAAQ,KAAM,SAASuV,GACpB,OAAOA,EAAIC,gBAGnB,OACI9G,EAAAvO,EAAAC,cAACiP,EAAD,CACI/O,IAAKA,EACLiE,UAAU,2BAETK,EAAO,IACR8J,EAAAvO,EAAAC,cAAA,OAAKmE,UAAU,eAEP/G,KAAKyB,MACAgT,gBACD3R,MAMrB9C,WAMtBA,KAAKyB,MAAM0R,eAAeC,KAC3BlC,EAAAvO,EAAAC,cAACqU,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACnBlG,EAAAvO,EAAAC,cAACyU,EAAA,EAAD,KACInG,EAAAvO,EAAAC,cAACqB,EAAA,EAAD,CACImC,eAAgB,kBAChBC,gBAAgB,EAChBzB,UAAW,SACX4B,OAAQ,WACRC,kBAAmB,kBACnBC,YACI,+DAGRwK,EAAAvO,EAAAC,cAAC0U,EAAA,EAAD,KACIpG,EAAAvO,EAAAC,cAAA,OACImE,UACI,uDAGJmK,EAAAvO,EAAAC,cAAC2U,EAAA,aAAD,CACIxQ,UAAU,aACV4E,MAAO3L,KAAKyB,MAAMqU,aAClB0B,QAAS,CACLC,KAAM,SACNC,MAAO,UAEXC,cAAe3X,KAAKqY,wBAAwBlY,KACxCH,QAGRkR,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAK8W,UAAU3W,KAAKH,MAC7B+G,UAAU,yCACVG,MAAM,UACNF,GAAG,QAJP,QAQAkK,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAKsY,aAAanY,KAAKH,MAChC+G,UAAU,sDACVG,MAAM,SACNF,GAAG,SAJP,UASJkK,EAAAvO,EAAAC,cAAA,KACIL,KAAK,6BACLwE,UAAW,uBAEXmK,EAAAvO,EAAAC,cAAA,iCACAsO,EAAAvO,EAAAC,cAACyO,EAAD,CAAWtK,UAAU,iBAChB3C,OAAOyH,KACJ7L,KAAKyB,MAAMqT,gBACb/O,IAAI,SAASjD,GACX,IAAIsE,EAAQtE,EAEPN,QAAQ,WAAY,OACpBoE,cAEApE,QAAQ,KAAM,SAASuV,GACpB,OAAOA,EAAIC,gBAGnB,OACI9G,EAAAvO,EAAAC,cAACiP,EAAD,CACI/O,IAAKA,EACLiE,UAAU,2BAETK,EAAO,IACR8J,EAAAvO,EAAAC,cAAA,OAAKmE,UAAU,eAEP/G,KAAKyB,MACAqT,eACDhS,MAMrB9C,YAMrBA,KAAKyB,MAAM0R,eAAeG,QAAUtT,KAAKyB,MAAM0R,eAAeI,MAChErC,EAAAvO,EAAAC,cAACqU,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KACnBlG,EAAAvO,EAAAC,cAACyU,EAAA,EAAD,KACInG,EAAAvO,EAAAC,cAACqB,EAAA,EAAD,CACImC,eAAgB,qBAChBC,gBAAgB,EAChBzB,UAAW,SACX4B,OAAQ,WACRC,kBAAmB,qBACnBC,YACI,kHAGRwK,EAAAvO,EAAAC,cAAC0U,EAAA,EAAD,KACCtX,KAAKyB,MAAM0R,eAAeI,KACvBrC,EAAAvO,EAAAC,cAAA,OACImE,UACI,0DAGJmK,EAAAvO,EAAAC,cAAC2U,EAAA,aAAD,CACIxQ,UAAU,aACV4E,MAAO3L,KAAKyB,MAAMsU,SAClByB,QAAS,CACLC,KAAM,SACNC,MAAO,UAEXC,cAAe3X,KAAKuY,oBAAoBpY,KACpCH,QAGRkR,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAK8W,UAAU3W,KAAKH,MAC7B+G,UAAU,yCACVG,MAAM,UACNF,GAAG,QAJP,QAQAkK,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAKwY,SAASrY,KAAKH,MAC5B+G,UAAU,sDACVG,MAAM,SACNF,GAAG,SAJP,UASHhH,KAAKyB,MAAM0R,eAAeI,KAC3BrC,EAAAvO,EAAAC,cAAA,KACIL,KAAK,gDACLwE,UAAW,uBAEXmK,EAAAvO,EAAAC,cAAA,4CACAsO,EAAAvO,EAAAC,cAACyO,EAAD,CAAWtK,UAAU,iBAChB3C,OAAOyH,KACJ7L,KAAKyB,MACA4T,8BACPtP,IAAI,SAASjD,GACX,IAAIsE,EAAQtE,EAEPN,QAAQ,WAAY,OACpBoE,cAEApE,QAAQ,KAAM,SAASuV,GACpB,OAAOA,EAAIC,gBAGnB,OACI9G,EAAAvO,EAAAC,cAACiP,EAAD,CACI/O,IAAKA,EACLiE,UAAU,2BAETK,EAAO,IACR8J,EAAAvO,EAAAC,cAAA,OAAKmE,UAAU,eAEP/G,KAAKyB,MACA4T,6BACDvS,MAMrB9C,QAGVA,KAAKyB,MAAM0R,eAAeG,QAC3BpC,EAAAvO,EAAAC,cAAA,OACImE,UACI,0DAGJmK,EAAAvO,EAAAC,cAAC2U,EAAA,aAAD,CACIxQ,UAAU,aACV4E,MAAO3L,KAAKyB,MAAMuU,kBAClBwB,QAAS,CACLC,KAAM,SACNC,MAAO,UAEXC,cAAe3X,KAAKyY,6BAA6BtY,KAC7CH,QAGRkR,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAK8W,UAAU3W,KAAKH,MAC7B+G,UAAU,yCACVG,MAAM,UACNF,GAAG,QAJP,QAQAkK,EAAAvO,EAAAC,cAACiV,EAAA,EAAD,CACIpQ,QAASzH,KAAK0Y,kBAAkBvY,KAC5BH,MAEJ+G,UAAU,sDACVG,MAAM,SACNF,GAAG,SANP,UAWHhH,KAAKyB,MAAM0R,eAAeG,QAC3BpC,EAAAvO,EAAAC,cAAA,KACIL,KAAK,qCACLwE,UAAW,uBAEXmK,EAAAvO,EAAAC,cAAA,+BACAsO,EAAAvO,EAAAC,cAACyO,EAAD,KACKjN,OAAOyH,KACJ7L,KAAKyB,MAAM8T,qBACbxP,IAAI,SAASjD,GACX,IAAIsE,EAAQtE,EAEPN,QAAQ,WAAY,OACpBoE,cAEApE,QAAQ,KAAM,SAASuV,GACpB,OAAOA,EAAIC,gBAGnB,OACI9G,EAAAvO,EAAAC,cAACiP,EAAD,CACI/O,IAAKA,EACLiE,UAAU,2BAETK,EAAO,IACR8J,EAAAvO,EAAAC,cAAA,OAAKmE,UAAU,eAEP/G,KAAKyB,MACA8T,oBACDzS,GAJZ,OAWT9C,oBAtvBnBC,KAkwBTwV","file":"static/js/16.d8137730.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nvar AppDispatcher = require(\"../../AppDispatcher\");\n\nvar neo4jConnectionString = localStorage.getItem(\"connectionString\"); //\"localhost\";\nvar neo4jUsername = localStorage.getItem(\"username\"); //\"neo4j\";\nvar neo4jPassword = localStorage.getItem(\"password\"); //\"Test123.\";\n\nvar neo4j = null;\nvar neo4jDriver = null;\nvar neo4jSession = null;\n\nvar databaseCredentialsProvided = false;\nvar databaseCredentialsCorrect = true;\n\nfunction GenericException(message, name) {\n    this.message = message;\n    this.name = name;\n}\n\nclass DashboardAbstract extends Component {\n    static checkForDatabaseConnection() {\n        var connectionString = localStorage.getItem(\"connectionString\");\n        var neo4jPassword = localStorage.getItem(\"password\");\n        var neo4jUsername = localStorage.getItem(\"username\");\n\n        databaseCredentialsProvided =\n            connectionString !== null &&\n            connectionString !== \"\" &&\n            neo4jPassword !== null &&\n            neo4jPassword !== \"\" &&\n            neo4jUsername !== null &&\n            neo4jUsername !== \"\";\n\n        // if database credentials are provided via .env file, we load them initially\n        if (\n            !databaseCredentialsProvided &&\n            typeof process.env.REACT_APP_NEO4J_IP !== \"undefined\" &&\n            typeof process.env.REACT_APP_NEO4J_USERNAME !== \"undefined\" &&\n            typeof process.env.REACT_APP_NEO4J_PASSWORD !== \"undefined\"\n        ) {\n            localStorage.setItem(\n                \"connectionString\",\n                process.env.REACT_APP_NEO4J_IP\n            );\n            localStorage.setItem(\n                \"username\",\n                process.env.REACT_APP_NEO4J_USERNAME\n            );\n            localStorage.setItem(\n                \"password\",\n                process.env.REACT_APP_NEO4J_PASSWORD\n            );\n\n            var projectName = \"My project\";\n            if (typeof process.env.REACT_APP_PROJECT_NAME !== \"undefined\") {\n                projectName = process.env.REACT_APP_PROJECT_NAME;\n            }\n            localStorage.setItem(\"projectName\", projectName);\n\n            var limitCountingHotspots = \"70\";\n            if (\n                typeof process.env.REACT_APP_LIMIT_COUNTING_HOTSPOTS !==\n                \"undefined\"\n            ) {\n                limitCountingHotspots =\n                    process.env.REACT_APP_LIMIT_COUNTING_HOTSPOTS;\n            }\n            localStorage.setItem(\n                \"limitCountingHotspots\",\n                limitCountingHotspots\n            );\n\n            databaseCredentialsProvided = true;\n        }\n    }\n\n    componentWillMount() {\n        this.handleAction = this.handleAction.bind(this);\n        this.setState({\n            dispatcherEventId: AppDispatcher.register(this.handleAction)\n        });\n\n        return new Promise(DashboardAbstract.checkForDatabaseConnection).then(\n            this.testDatabaseCredentials()\n        );\n    }\n\n    testDatabaseCredentials() {\n        var connectionString = neo4jConnectionString;\n        var username = neo4jUsername;\n        var password = neo4jPassword;\n\n        connectionString = localStorage.getItem(\"connectionString\"); //if we're on settings page and trying to validate new credentials\n        username = localStorage.getItem(\"username\"); //if we're on settings page and trying to validate new credentials\n        password = localStorage.getItem(\"password\"); //if we're on settings page and trying to validate new credentials\n\n        if (databaseCredentialsProvided) {\n            this.refreshConnectionSettings(); //set to abstract variables\n\n            //TODO: check if there is a better method for running dashboard and test components\n            if (typeof testrun !== \"undefined\") {\n                neo4j = require(\"neo4j-driver\");\n            } else {\n                neo4j = require(\"neo4j-driver/lib/browser/neo4j-web\");\n            }\n\n            neo4jDriver = neo4j.v1.driver(\n                \"bolt://\" + connectionString,\n                neo4j.v1.auth.basic(username, password)\n            );\n            neo4jSession = neo4jDriver.session();\n\n            return neo4jSession\n                .run(\"match (n) return n limit 1\") //this should be as generic as possible =)\n                .then(function() {\n                    databaseCredentialsCorrect = true;\n                })\n                .catch(function(error) {\n                    databaseCredentialsCorrect = false;\n                    neo4jConnectionString = \"\";\n                    throw new GenericException(\n                        \"Invalid database connection data\",\n                        \"InvalidDatabaseConnectionException\"\n                    );\n                }); //handle wrong credentials\n        } //end if\n    }\n\n    componentDidMount() {}\n\n    refreshConnectionSettings() {\n        neo4jConnectionString = localStorage.getItem(\"connectionString\"); //\"localhost\";\n        neo4jUsername = localStorage.getItem(\"username\"); //\"neo4j\";\n        neo4jPassword = localStorage.getItem(\"password\"); //\"Test123.\";\n    }\n\n    componentWillUnmount() {\n        if (neo4jSession !== null) {\n            //neo4jSession.close(); //TODO: this triggers (atm) WebSocket is closed before the connection is established. > disabled\n        }\n        if (neo4jDriver !== null) {\n            //neo4jDriver.close(); //TODO: this triggers (atm) WebSocket is closed before the connection is established. > disabled\n        }\n\n        AppDispatcher.unregister(this.state.dispatcherEventId);\n    }\n\n    handleAction(event) {\n        var action = event.action;\n        switch (action.actionType) {\n            case \"SET_STATE\":\n                var stateData = event.action.data;\n                this.setState(stateData);\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        var rdir = [];\n        if (!databaseCredentialsProvided || !databaseCredentialsCorrect) {\n            console.log(\"No database credentials, redirecting to settings...\");\n            var baseUrl =\n                window.location.protocol + \"//\" + window.location.host + \"/#\";\n            var path = window.location.href.replace(baseUrl, \"\");\n            if (path !== \"/settings\") {\n                rdir.push(<Redirect key=\"dummy\" to=\"/settings\" />);\n            }\n        }\n\n        return rdir;\n    }\n}\n\nexport default DashboardAbstract;\nexport {\n    neo4j,\n    neo4jSession,\n    databaseCredentialsProvided,\n    databaseCredentialsCorrect,\n    GenericException\n};\n","var Dispatcher = require('flux').Dispatcher;\n\n// Create dispatcher instance\nvar AppDispatcher = new Dispatcher();\n\n// Convenience method to handle dispatch requests\nAppDispatcher.handleAction = function (action) {\n  this.dispatch({\n    source: 'VIEW_ACTION',\n    action: action\n  });\n}\n\nmodule.exports = AppDispatcher;","import React, { Component } from \"react\";\nimport {\n    CardHeader,\n    Popover,\n    PopoverHeader,\n    PopoverBody,\n    Tooltip\n} from \"reactstrap\";\nimport { AppSwitch } from \"@coreui/react\";\nimport $ from \"jquery\";\n\nclass CustomCardHeader extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tooltipOpen: [false, false],\n            popoverOpen: false,\n            popovers: [\n                {\n                    placement: \"bottom\",\n                    text: \"Bottom\"\n                }\n            ]\n        };\n\n        this.toggleInfo = this.toggleInfo.bind(this);\n    }\n\n    componentDidMount() {\n        $(\".expert-mode\").each(function() {\n            if ($(this).hasClass(\"expert-mode-set\") === false) {\n                $(this).on(\"change\", function() {\n                    var group = $(this)\n                        .find(\"input\")\n                        .attr(\"id\");\n                    var editor = $(\".expert-mode-editor\");\n                    var visualizationWrapper = $(\".visualization-wrapper\");\n                    if (\n                        typeof group !== \"undefined\" &&\n                        editor.hasClass(group)\n                    ) {\n                        editor = $(\".expert-mode-editor.\" + group);\n                        visualizationWrapper = editor.next(\n                            \".visualization-wrapper\"\n                        );\n                    }\n\n                    if (editor.hasClass(\"hide-expert-mode\")) {\n                        editor.removeClass(\"hide-expert-mode\");\n                        visualizationWrapper.addClass(\n                            \"margin-top-50 margin-bottom-50\"\n                        );\n                        editor.parent(\".card-body\").addClass(\"height-auto\");\n                    } else {\n                        editor.addClass(\"hide-expert-mode\");\n                        visualizationWrapper.removeClass(\n                            \"margin-top-50 margin-bottom-50\"\n                        );\n                        editor.parent(\".card-body\").removeClass(\"height-auto\");\n                    }\n                });\n                $(this).addClass(\"expert-mode-set\");\n            }\n        });\n    }\n\n    toggle(i) {\n        const newArray = this.state.tooltipOpen.map((element, index) => {\n            return index === i ? !element : false;\n        });\n        this.setState({\n            tooltipOpen: newArray\n        });\n    }\n\n    toggleInfo() {\n        this.setState({\n            popoverOpen: !this.state.popoverOpen\n        });\n    }\n\n    render() {\n        var headerText = this.props.cardHeaderText;\n        var showExpertMode = this.props.showExpertMode;\n        var popoverPlacement = this.props.placement;\n        //var popoverIsOpen = this.props.isOpen;\n        var popoverTarget = this.props.target;\n        //var popoverToggle = this.props.toggle;\n        var popoverHeaderText = this.props.popoverHeaderText;\n        var popoverBody = this.props.popoverBody;\n        var cssClass = headerText\n            .toLowerCase()\n            .replace(/\\s/g, \"-\")\n            .replace(/[&/\\\\#,+()$~%.'\":*?<>{}]/g, \"\");\n\n        var expertToggle = \"\";\n        if (showExpertMode) {\n            expertToggle = (\n                <div className={\"float-left\"}>\n                    <div id={\"tooltip-\" + cssClass}>\n                        <AppSwitch\n                            id={cssClass}\n                            className={\n                                \"mx-1 float-right display-block expert-mode \" +\n                                cssClass\n                            }\n                            color={\"secondary\"}\n                            size={\"sm\"}\n                            label\n                        />\n                    </div>\n                    <Tooltip\n                        placement=\"top\"\n                        isOpen={this.state.tooltipOpen[0]}\n                        target={\"tooltip-\" + cssClass}\n                        toggle={() => {\n                            this.toggle(0);\n                        }}\n                    >\n                        Toggle expert mode\n                    </Tooltip>\n                </div>\n            );\n        }\n\n        return (\n            <CardHeader>\n                {headerText}\n                <div className=\"card-actions\">\n                    {expertToggle}\n                    <button onClick={this.toggleInfo} id={popoverTarget}>\n                        <i className=\"text-muted fa fa-question-circle\" />\n                    </button>\n                    <Tooltip\n                        placement=\"top\"\n                        isOpen={this.state.tooltipOpen[1]}\n                        target={popoverTarget}\n                        toggle={() => {\n                            this.toggle(1);\n                        }}\n                    >\n                        Show details\n                    </Tooltip>\n                    <Popover\n                        placement={popoverPlacement}\n                        isOpen={this.state.popoverOpen}\n                        target={popoverTarget}\n                        toggle={this.toggleInfo}\n                    >\n                        <PopoverHeader>{popoverHeaderText}</PopoverHeader>\n                        <PopoverBody>{popoverBody}</PopoverBody>\n                    </Popover>\n                </div>\n            </CardHeader>\n        );\n    }\n}\n\nexport default CustomCardHeader;\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n!function (global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    } // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n\n\n    return;\n  } // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n\n\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  runtime.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  runtime.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n}( // In sloppy mode, unbound `this` refers to the global object, fallback to\n// Function constructor if we're in global strict mode. That is sadly a form\n// of indirect eval which violates Content Security Policy.\nfunction () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")());","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  flush: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul'\n};\n\nvar ListGroup = function ListGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      flush = props.flush,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"flush\"]);\n\n  var classes = mapToCssModules(classNames(className, 'list-group', flush ? 'list-group-flush' : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nListGroup.propTypes = propTypes;\nListGroup.defaultProps = defaultProps;\nexport default ListGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  color: PropTypes.string,\n  action: PropTypes.bool,\n  className: PropTypes.any,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar handleDisabledOnClick = function handleDisabledOnClick(e) {\n  e.preventDefault();\n};\n\nvar ListGroupItem = function ListGroupItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      active = props.active,\n      disabled = props.disabled,\n      action = props.action,\n      color = props.color,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"active\", \"disabled\", \"action\", \"color\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, disabled ? 'disabled' : false, action ? 'list-group-item-action' : false, color ? \"list-group-item-\" + color : false, 'list-group-item'), cssModule); // Prevent click event when disabled.\n\n  if (disabled) {\n    attributes.onClick = handleDisabledOnClick;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nListGroupItem.propTypes = propTypes;\nListGroupItem.defaultProps = defaultProps;\nexport default ListGroupItem;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { neo4jSession } from \"../../views/Dashboard/AbstractDashboardComponent\";\n\nclass DashboardModel {\n    constructor(props) {\n        const dashboardStructureQuery =\n            // architecture metrics (table 1)\n            // number of classes\n            \"OPTIONAL MATCH (t:Type:Class) \" +\n            \"WITH count(t) as classes \" +\n            // number of interfaces\n            \"OPTIONAL MATCH (t:Type:Interface) \" +\n            \"WITH classes, count(t) as interfaces \" +\n            // number of enums\n            \"OPTIONAL MATCH (t:Type:Enum) \" +\n            \"WITH classes, interfaces, count(t) as enums \" +\n            // number of annotations\n            \"OPTIONAL MATCH (t:Type:Annotation) \" +\n            \"WITH  classes, interfaces, enums, count(t) as annotations \" +\n            // number of methods and lines of code\n            \"OPTIONAL MATCH (t:Type:ProjectFile)-[:DECLARES]->(m:Method) \" +\n            \"WITH classes, interfaces, enums, annotations, count(m) as methods, sum(m.effectiveLineCount) as loc \" +\n            // number of fields\n            \"OPTIONAL MATCH (t:Type:ProjectFile)-[:DECLARES]->(f:Field) \" +\n            \"RETURN classes, interfaces, enums, annotations, methods, loc, count(f) as fields\";\n\n        localStorage.setItem(\n            \"dashboard_structure_original_query\",\n            dashboardStructureQuery\n        );\n\n        const dashboardDependenciesQuery =\n            // relation metrics (table 2)\n            // dependencies\n            \"OPTIONAL MATCH (:Type:ProjectFile)-[d:DEPENDS_ON]->(:Type) \" +\n            \"WITH count(d) as dependencies \" +\n            // extends\n            \"OPTIONAL MATCH (:Type:ProjectFile)-[e:EXTENDS]->(superType:Type) \" +\n            'WHERE superType.name <> \"Object\" ' +\n            \"WITH dependencies, count(e) as extends \" +\n            // implements\n            \"OPTIONAL MATCH (:Type:ProjectFile)-[i:IMPLEMENTS]->(:Type) \" +\n            \"WITH dependencies, extends, count(i) as implements \" +\n            // calls\n            \"OPTIONAL MATCH (:Type:ProjectFile)-[:DECLARES]->(m:Method)-[i:INVOKES]->(:Method) \" +\n            \"WITH dependencies, extends, implements, count(i) as invocations \" +\n            // reads\n            \"OPTIONAL MATCH (:Type:ProjectFile)-[:DECLARES]->(m:Method)-[r:READS]->(:Field) \" +\n            \"WITH dependencies, extends, implements, invocations, count(r) as reads \" +\n            // writes\n            \"OPTIONAL MATCH (:Type:ProjectFile)-[:DECLARES]->(m:Method)-[w:WRITES]->(:Field) \" +\n            \"RETURN dependencies, extends, implements, invocations, reads, count(w) as writes\";\n        localStorage.setItem(\n            \"dashboard_dependencies_original_query\",\n            dashboardDependenciesQuery\n        );\n\n        const dashboardActivityQuery =\n            // activity metrics (table)\n            // number of authors\n            \"OPTIONAL MATCH (a:Author) \" +\n            \"WITH count(a) as authors \" +\n            // number of commits (without merges)\n            \"OPTIONAL MATCH (c:Commit) \" +\n            \"WHERE NOT c:Merge \" +\n            \"WITH authors, count(c) as commitsWithoutMerges \" +\n            // number of commits (including merges)\n            \"OPTIONAL MATCH (c:Commit:Merge) \" +\n            \"RETURN authors, commitsWithoutMerges, count(c) as commitsWithMerges\";\n        localStorage.setItem(\n            \"dashboard_activity_original_query\",\n            dashboardActivityQuery\n        );\n\n        const dashboardHotspotQuery =\n            // number of commits\n            \"MATCH (c:Commit)-[:CONTAINS_CHANGE]->()-[:MODIFIES]->(f:File) WHERE NOT c:Merge WITH f, count(c) as commits MATCH (t:Type)-[:HAS_SOURCE]->(f), (t)-[:DECLARES]->(m:Method) RETURN t.fqn as fqn, sum(commits) as commits ORDER BY fqn ASCENDING\";\n        localStorage.setItem(\n            \"dashboard_hotspot_original_query\",\n            dashboardHotspotQuery\n        );\n\n        const dashboardPMDQuery =\n            // number of violations\n            \"MATCH (:Report)-[:HAS_FILE]->(file:File:Pmd)-[:HAS_VIOLATION]->(violation:Violation) RETURN count(violation)\";\n        localStorage.setItem(\"dashboard_pmd_original_query\", dashboardPMDQuery);\n\n        const dashboardTestCoverageQuery =\n            // number of violations\n            \"MATCH (c:Jacoco:Class)-[:HAS_METHOD]->(m:Method:Jacoco)-[:HAS_COUNTER]->(t:Counter) WHERE t.type='INSTRUCTION' RETURN (sum(t.covered)*100)/(sum(t.covered)+sum(t.missed)) as coverage\";\n        localStorage.setItem(\n            \"dashboard_test_coverage_original_query\",\n            dashboardTestCoverageQuery\n        );\n\n        const pluginPresenceQuery =\n          \"OPTIONAL MATCH (x:Git) \" +\n          \"WITH count(x) > 0 as git \" +\n          \"OPTIONAL MATCH (x:Jacoco) \" +\n          \"WITH git, count(x) > 0 as jacoco \" +\n          \"OPTIONAL MATCH (x:Pmd) \" +\n          \"WITH git, jacoco,count(x) > 0 as pmd \" +\n          \"RETURN git, jacoco, pmd\";\n\n        this.state = {\n            queryStringStructure: dashboardStructureQuery,\n            queryStringDependencies: dashboardDependenciesQuery,\n            queryStringActivity: dashboardActivityQuery,\n            queryStringHotspot: dashboardHotspotQuery,\n            queryStringPMD: dashboardPMDQuery,\n            queryStringTestCoverage: dashboardTestCoverageQuery,\n            queryPluginPresence: pluginPresenceQuery\n        };\n\n        if (!localStorage.getItem(\"dashboard_structure_expert_query\")) {\n            localStorage.setItem(\n                \"dashboard_structure_expert_query\",\n                this.state.queryStringStructure\n            );\n        } else {\n            this.state.queryStringStructure = localStorage.getItem(\n                \"dashboard_structure_expert_query\"\n            );\n        }\n\n        if (!localStorage.getItem(\"dashboard_dependencies_expert_query\")) {\n            localStorage.setItem(\n                \"dashboard_dependencies_expert_query\",\n                this.state.queryStringDependencies\n            );\n        } else {\n            this.state.queryStringDependencies = localStorage.getItem(\n                \"dashboard_dependencies_expert_query\"\n            );\n        }\n\n        if (!localStorage.getItem(\"dashboard_activity_expert_query\")) {\n            localStorage.setItem(\n                \"dashboard_activity_expert_query\",\n                this.state.queryStringActivity\n            );\n        } else {\n            this.state.queryStringActivity = localStorage.getItem(\n                \"dashboard_activity_expert_query\"\n            );\n        }\n\n        if (!localStorage.getItem(\"dashboard_hotspot_expert_query\")) {\n            localStorage.setItem(\n                \"dashboard_hotspot_expert_query\",\n                this.state.queryStringHotspot\n            );\n        } else {\n            this.state.queryStringHotspot = localStorage.getItem(\n                \"dashboard_hotspot_expert_query\"\n            );\n        }\n\n        if (!localStorage.getItem(\"dashboard_pmd_expert_query\")) {\n            localStorage.setItem(\n                \"dashboard_pmd_expert_query\",\n                this.state.queryStringPMD\n            );\n        } else {\n            this.state.queryStringPMD = localStorage.getItem(\n                \"dashboard_pmd_expert_query\"\n            );\n        }\n\n        if (!localStorage.getItem(\"dashboard_test_coverage_expert_query\")) {\n            localStorage.setItem(\n                \"dashboard_test_coverage_expert_query\",\n                this.state.queryStringTestCoverage\n            );\n        } else {\n            this.state.queryStringTestCoverage = localStorage.getItem(\n                \"dashboard_test_coverage_expert_query\"\n            );\n        }\n    }\n\n    async readPluginPresence(thisBackup) {\n      var pluginPresence;\n      await Promise.resolve(\n        neo4jSession\n        .run(this.state.queryPluginPresence)\n        .then(function(result) {\n          result.records.forEach(function(record) {\n            pluginPresence = {\n              git: record.get(\"git\"),\n              jacoco: record.get(\"jacoco\"),\n              pmd: record.get(\"pmd\")\n            };\n          });\n        })\n        .then(function(context) {\n          thisBackup.setState({pluginPresence: pluginPresence});\n        })\n        .catch(function(error) {\n          console.log(error);\n        }));\n        return Promise.resolve(thisBackup);\n    }\n\n    readStructureMetrics(thisBackup) {\n        var structureMetrics = [];\n\n        neo4jSession\n            .run(this.state.queryStringStructure)\n            .then(function(result) {\n                result.records.forEach(function(record) {\n                    structureMetrics = {\n                        classes: record.get(0).low,\n                        interfaces: record.get(1).low,\n                        enums: record.get(2).low,\n                        annotations: record.get(3).low,\n                        methods: record.get(4).low,\n                        loc: record.get(5).low,\n                        fields: record.get(6).low\n                    };\n\n                    //console.log(structureMetrics);\n                });\n            })\n            .then(function(context) {\n                thisBackup.setState({ structureMetrics: structureMetrics });\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    }\n\n    readDependencyMetrics(thisBackup) {\n        var dependencyMetrics = [];\n\n        neo4jSession\n            .run(this.state.queryStringDependencies)\n            .then(function(result) {\n                result.records.forEach(function(record) {\n                    dependencyMetrics = {\n                        dependencies: record.get(0).low,\n                        extends: record.get(1).low,\n                        implements: record.get(2).low,\n                        invocations: record.get(3).low,\n                        reads: record.get(4).low,\n                        writes: record.get(5).low\n                    };\n\n                    //console.log(dependencyMetrics);\n                });\n            })\n            .then(function(context) {\n                thisBackup.setState({ dependencyMetrics: dependencyMetrics });\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    }\n\n    readActivityMetrics(thisBackup) {\n        var activityMetrics = [];\n\n        neo4jSession\n            .run(this.state.queryStringActivity)\n            .then(function(result) {\n                result.records.forEach(function(record) {\n                    activityMetrics = {\n                        authors: record.get(0).low,\n                        commitsWithoutMerges: record.get(1).low,\n                        commitsWithMerges: record.get(2).low\n                    };\n\n                    //console.log(activityMetrics);\n                });\n            })\n            .then(function(context) {\n                thisBackup.setState({ activityMetrics: activityMetrics });\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    }\n\n    readHotspotMetrics(thisBackup) {\n        const IDENTIFIER_LIMIT_COUNTING_HOTSPOTS = \"limitCountingHotspots\";\n\n        var localStorageLimitCountingHotspots = localStorage.getItem(\n            IDENTIFIER_LIMIT_COUNTING_HOTSPOTS\n        );\n        var hotspotMetrics = [];\n\n        neo4jSession\n            .run(this.state.queryStringHotspot)\n            .then(function(result) {\n                var maxCommits = 0;\n\n                result.records.forEach(function(record) {\n                    var currentCommmits = record.get(1).low;\n\n                    if (currentCommmits > maxCommits) {\n                        maxCommits = currentCommmits;\n                    }\n                });\n\n                var hotspotCount = 0;\n                result.records.forEach(function(record) {\n                    var currentCommmits = record.get(1).low;\n\n                    if (\n                        Math.round((currentCommmits / maxCommits) * 100) >=\n                        localStorageLimitCountingHotspots\n                    ) {\n                        hotspotCount++;\n                    }\n                });\n\n                hotspotMetrics = {\n                    commitHotspots: hotspotCount\n                };\n            })\n            .then(function(context) {\n                thisBackup.setState({\n                    hotspotMetrics: hotspotMetrics\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    }\n\n    readStaticCodeAnalysisPMDMetrics(thisBackup) {\n        var staticCodeAnalysisPMDMetrics = [];\n\n        neo4jSession\n            .run(this.state.queryStringPMD)\n            .then(function(result) {\n                result.records.forEach(function(record) {\n                    staticCodeAnalysisPMDMetrics = {\n                        violations: record.get(0).low\n                    };\n\n                    //console.log(staticCodeAnalysisPMDMetrics);\n                });\n            })\n            .then(function(context) {\n                thisBackup.setState({\n                    staticCodeAnalysisPMDMetrics: staticCodeAnalysisPMDMetrics\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    }\n\n    readTestCoverageMetrics(thisBackup) {\n        var testCoverageMetrics = [];\n\n        neo4jSession\n            .run(this.state.queryStringTestCoverage)\n            .then(function(result) {\n                result.records.forEach(function(record) {\n                    testCoverageMetrics = {\n                        overallTestCoverage: record.get(0).low\n                    };\n\n                    //console.log(testCoverageMetrics);\n                });\n            })\n            .then(function(context) {\n                thisBackup.setState({\n                    testCoverageMetrics: testCoverageMetrics\n                });\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    }\n}\n\nexport default DashboardModel;\n","import React from \"react\";\nimport DashboardAbstract, {\n    databaseCredentialsProvided\n} from \"./AbstractDashboardComponent\";\nimport CustomCardHeader from \"./CustomCardHeader/CustomCardHeader\";\nimport { CypherEditor } from \"graph-app-kit/components/Editor\";\nimport {\n    Button,\n    Row,\n    Col,\n    Card,\n    CardBody,\n    ListGroup,\n    ListGroupItem\n} from \"reactstrap\";\nimport DashboardModel from \"../../api/models/Dashboard\";\nimport $ from \"jquery\";\n\nvar AppDispatcher = require(\"../../AppDispatcher\");\n\nclass Dashboard extends DashboardAbstract {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            queryStructure: \"\",\n            queryDependencies: \"\",\n            queryActivity: \"\",\n            queryHotspot: \"\",\n            queryPMD: \"\",\n            queryTestCoverage: \"\",\n            structureMetrics: {\n                classes: \"loading\",\n                interfaces: \"loading\",\n                enums: \"loading\",\n                annotations: \"loading\",\n                methods: \"loading\",\n                loc: \"loading\",\n                fields: \"loading\"\n            },\n            dependencyMetrics: {\n                dependencies: \"loading\",\n                extends: \"loading\",\n                implements: \"loading\",\n                invocations: \"loading\",\n                reads: \"loading\",\n                writes: \"loading\"\n            },\n            activityMetrics: {\n                authors: \"loading\",\n                commitsWithoutMerges: \"loading\",\n                commitsWithMerges: \"loading\"\n            },\n            hotspotMetrics: {\n                commitHotspots: \"loading\"\n            },\n            staticCodeAnalysisPMDMetrics: {\n                violations: \"loading\"\n            },\n            testCoverageMetrics: {\n                overallTestCoverage: \"loading\"\n            },\n            pluginPresence: {\n              git: false,\n              jacoco: false,\n              pmd: false\n            }\n        };\n\n        this.toggleInfo = this.toggleInfo.bind(this);\n    }\n\n    componentDidMount() {\n        super.componentDidMount();\n\n        if (databaseCredentialsProvided) {\n            var dashboardModel = new DashboardModel();\n\n            dashboardModel.readPluginPresence(this).then(function(context) {\n              dashboardModel.readStructureMetrics(context);\n              dashboardModel.readDependencyMetrics(context);\n              if(context.state.pluginPresence.git) {\n                dashboardModel.readActivityMetrics(context);\n                dashboardModel.readHotspotMetrics(context);\n              }\n              if(context.state.pluginPresence.pmd) {\n                dashboardModel.readStaticCodeAnalysisPMDMetrics(context);\n              }\n              if(context.state.pluginPresence.jacoco) {\n                dashboardModel.readTestCoverageMetrics(context);\n              }\n\n              context.setState({\n                  queryStructure: localStorage.getItem(\n                      \"dashboard_structure_expert_query\"\n                  ),\n                  queryDependencies: localStorage.getItem(\n                      \"dashboard_dependencies_expert_query\"\n                  ),\n                  queryActivity: localStorage.getItem(\n                      \"dashboard_activity_expert_query\"\n                  ),\n                  queryHotspot: localStorage.getItem(\n                      \"dashboard_hotspot_expert_query\"\n                  ),\n                  queryPMD: localStorage.getItem(\"dashboard_pmd_expert_query\"),\n                  queryTestCoverage: localStorage.getItem(\n                      \"dashboard_test_coverage_expert_query\"\n                  )\n              });\n            });\n        }\n\n        $(document).ready(function() {\n            // Select and loop all card-body elements\n            $(\".card-body\").each(function() {\n                // Cache the highest\n                var highestBox = 0;\n\n                // If this box is higher than the cached highest then store it\n                if ($(this).height() > highestBox) {\n                    highestBox = $(this).height();\n                }\n\n                // Set the height of all those children to whichever was highest\n                $(\".card-body\").height(highestBox);\n            });\n        });\n    }\n\n    componentWillUnmount() {\n        super.componentWillUnmount();\n    }\n\n    handleAction(event) {\n        var action = event.action;\n        switch (action.actionType) {\n            case \"EXPERT_QUERY\":\n                if (databaseCredentialsProvided) {\n                    var dashboardModel = new DashboardModel();\n                    dashboardModel.readStructureMetrics(this);\n                    dashboardModel.readDependencyMetrics(this);\n                    dashboardModel.readActivityMetrics(this);\n                    dashboardModel.readStaticCodeAnalysisPMDMetrics(this);\n                    dashboardModel.readHotspotMetrics(this);\n                    dashboardModel.readTestCoverageMetrics(this);\n                }\n                break;\n            default:\n                return true;\n        }\n    }\n\n    clearStructure(event) {\n        localStorage.setItem(\n            \"dashboard_structure_expert_query\",\n            localStorage.getItem(\"dashboard_structure_original_query\")\n        );\n        this.sendQuery(this);\n    }\n\n    clearDependencies(event) {\n        localStorage.setItem(\n            \"dashboard_dependencies_expert_query\",\n            localStorage.getItem(\"dashboard_dependencies_original_query\")\n        );\n        this.sendQuery(this);\n    }\n\n    clearActivity(event) {\n        localStorage.setItem(\n            \"dashboard_activity_expert_query\",\n            localStorage.getItem(\"dashboard_activity_original_query\")\n        );\n        this.sendQuery(this);\n    }\n\n    clearHotspot(event) {\n        localStorage.setItem(\n            \"dashboard_hotspot_expert_query\",\n            localStorage.getItem(\"dashboard_hotspot_original_query\")\n        );\n        this.sendQuery(this);\n    }\n\n    clearPMD(event) {\n        localStorage.setItem(\n            \"dashboard_pmd_expert_query\",\n            localStorage.getItem(\"dashboard_pmd_original_query\")\n        );\n        this.sendQuery(this);\n    }\n\n    clearTestCoverage(event) {\n        localStorage.setItem(\n            \"dashboard_test_coverage_expert_query\",\n            localStorage.getItem(\"dashboard_test_coverage_original_query\")\n        );\n        this.sendQuery(this);\n    }\n\n    sendQuery(event) {\n        this.setState({\n            queryStructure: localStorage.getItem(\n                \"dashboard_structure_expert_query\"\n            ),\n            queryDependencies: localStorage.getItem(\n                \"dashboard_dependencies_expert_query\"\n            ),\n            queryActivity: localStorage.getItem(\n                \"dashboard_activity_expert_query\"\n            ),\n            queryHotspot: localStorage.getItem(\n                \"dashboard_hotspot_expert_query\"\n            ),\n            queryPMD: localStorage.getItem(\"dashboard_pmd_expert_query\"),\n            queryTestCoverage: localStorage.getItem(\n                \"dashboard_test_coverage_expert_query\"\n            )\n        });\n\n        AppDispatcher.handleAction({\n            actionType: \"EXPERT_QUERY\",\n            data: {\n                queryStringStructure: localStorage.getItem(\n                    \"dashboard_structure_expert_query\"\n                ),\n                queryStringDependencies: localStorage.getItem(\n                    \"dashboard_dependencies_expert_query\"\n                ),\n                queryStringActivity: localStorage.getItem(\n                    \"dashboard_activity_expert_query\"\n                ),\n                queryStringHotspot: localStorage.getItem(\n                    \"dashboard_hotspot_expert_query\"\n                ),\n                queryStringPMD: localStorage.getItem(\n                    \"dashboard_pmd_expert_query\"\n                ),\n                queryStringTestCoverage: localStorage.getItem(\n                    \"dashboard_test_coverage_expert_query\"\n                )\n            }\n        });\n    }\n\n    updateStateQueryStructure(event) {\n        localStorage.setItem(\"dashboard_structure_expert_query\", event);\n    }\n\n    updateStateQueryDependencies(event) {\n        localStorage.setItem(\"dashboard_dependencies_expert_query\", event);\n    }\n\n    updateStateQueryActivity(event) {\n        localStorage.setItem(\"dashboard_activity_expert_query\", event);\n    }\n\n    updateStateQueryHotspot(event) {\n        localStorage.setItem(\"dashboard_hotspot_expert_query\", event);\n    }\n\n    updateStateQueryPMD(event) {\n        localStorage.setItem(\"dashboard_pmd_expert_query\", event);\n    }\n\n    updateStateQueryTestCoverage(event) {\n        localStorage.setItem(\"dashboard_test_coverage_expert_query\", event);\n    }\n\n    toggleInfo() {\n        this.setState({\n            popoverOpen: !this.state.popoverOpen\n        });\n    }\n\n    render() {\n        var redirect = super.render();\n        if (redirect.length > 0) {\n            return redirect;\n        }\n\n        return (\n            <div className=\"animated fadeIn dashboard\">\n                <Row>\n                    <Col xs=\"12\" sm=\"6\" md=\"3\">\n                        <Card>\n                            <CustomCardHeader\n                                cardHeaderText={\"Architecture\"}\n                                showExpertMode={true}\n                                placement={\"bottom\"}\n                                target={\"Popover1\"}\n                                popoverHeaderText={\"Architecture\"}\n                                popoverBody={\n                                    \"Common architecture and dependency metrics provide an overview of the project, e.g., number of classes, LOC, number of dependencies, and field reads.\"\n                                }\n                            />\n                            <CardBody>\n                                <div\n                                    className={\n                                        \"expert-mode-editor hide-expert-mode architecture\"\n                                    }\n                                >\n                                    <CypherEditor\n                                        className=\"cypheredit\"\n                                        value={this.state.queryStructure}\n                                        options={{\n                                            mode: \"cypher\",\n                                            theme: \"cypher\"\n                                        }}\n                                        onValueChange={this.updateStateQueryStructure.bind(\n                                            this\n                                        )}\n                                    />\n                                    <Button\n                                        onClick={this.sendQuery.bind(this)}\n                                        className=\"btn btn-success send-query float-right\"\n                                        color=\"success\"\n                                        id=\"send\"\n                                    >\n                                        Send\n                                    </Button>\n                                    <Button\n                                        onClick={this.clearStructure.bind(this)}\n                                        className=\"btn btn-success send-query float-right margin-right\"\n                                        color=\"danger\"\n                                        id=\"reset\"\n                                    >\n                                        Reset\n                                    </Button>\n                                </div>\n                                <a\n                                    href=\"#/architecture/structure\"\n                                    className={\"display-block clear\"}\n                                >\n                                    <strong>Structure metrics</strong>\n                                    <ListGroup className=\"margin-bottom\">\n                                        {Object.keys(\n                                            this.state.structureMetrics\n                                        ).map(function(key) {\n                                            var label = key\n                                                // insert a space before all caps\n                                                .replace(/([A-Z])/g, \" $1\")\n                                                .toLowerCase()\n                                                // uppercase the first character\n                                                .replace(/^./, function(str) {\n                                                    return str.toUpperCase();\n                                                });\n\n                                            return (\n                                                <ListGroupItem\n                                                    key={key}\n                                                    className=\"justify-content-between\"\n                                                >\n                                                    {label}{\" \"}\n                                                    <div className=\"float-right\">\n                                                        {\n                                                            this.state\n                                                                .structureMetrics[\n                                                                key\n                                                            ]\n                                                        }\n                                                    </div>\n                                                </ListGroupItem>\n                                            );\n                                        }, this)}\n                                    </ListGroup>\n                                </a>\n\n                                <div\n                                    className={\n                                        \"expert-mode-editor hide-expert-mode architecture\"\n                                    }\n                                >\n                                    <CypherEditor\n                                        className=\"cypheredit\"\n                                        value={this.state.queryDependencies}\n                                        options={{\n                                            mode: \"cypher\",\n                                            theme: \"cypher\"\n                                        }}\n                                        onValueChange={this.updateStateQueryDependencies.bind(\n                                            this\n                                        )}\n                                    />\n                                    <Button\n                                        onClick={this.sendQuery.bind(this)}\n                                        className=\"btn btn-success send-query float-right\"\n                                        color=\"success\"\n                                        id=\"send\"\n                                    >\n                                        Send\n                                    </Button>\n                                    <Button\n                                        onClick={this.clearDependencies.bind(\n                                            this\n                                        )}\n                                        className=\"btn btn-success send-query float-right margin-right\"\n                                        color=\"danger\"\n                                        id=\"reset\"\n                                    >\n                                        Reset\n                                    </Button>\n                                </div>\n\n                                <a\n                                    href=\"#/architecture/dependencies\"\n                                    className={\"display-block clear\"}\n                                >\n                                    <strong>Dependency metrics</strong>\n                                    <ListGroup>\n                                        {Object.keys(\n                                            this.state.dependencyMetrics\n                                        ).map(function(key) {\n                                            var label = key\n                                                // insert a space before all caps\n                                                .replace(/([A-Z])/g, \" $1\")\n                                                .toLowerCase()\n                                                // uppercase the first character\n                                                .replace(/^./, function(str) {\n                                                    return str.toUpperCase();\n                                                });\n\n                                            return (\n                                                <ListGroupItem\n                                                    key={key}\n                                                    className=\"justify-content-between\"\n                                                >\n                                                    {label}{\" \"}\n                                                    <div className=\"float-right\">\n                                                        {\n                                                            this.state\n                                                                .dependencyMetrics[\n                                                                key\n                                                            ]\n                                                        }\n                                                    </div>\n                                                </ListGroupItem>\n                                            );\n                                        }, this)}\n                                    </ListGroup>\n                                </a>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                    {this.state.pluginPresence.git &&\n                    <Col xs=\"12\" sm=\"6\" md=\"3\">\n                        <Card>\n                            <CustomCardHeader\n                                cardHeaderText={\"Resource Management\"}\n                                showExpertMode={true}\n                                placement={\"bottom\"}\n                                target={\"Popover2\"}\n                                popoverHeaderText={\"Resource Management\"}\n                                popoverBody={\n                                    \"Resource management provides an overview of development activities, authors, and their commits.\"\n                                }\n                            />\n                            <CardBody>\n                                <div\n                                    className={\n                                        \"expert-mode-editor hide-expert-mode resource-management\"\n                                    }\n                                >\n                                    <CypherEditor\n                                        className=\"cypheredit\"\n                                        value={this.state.queryActivity}\n                                        options={{\n                                            mode: \"cypher\",\n                                            theme: \"cypher\"\n                                        }}\n                                        onValueChange={this.updateStateQueryActivity.bind(\n                                            this\n                                        )}\n                                    />\n                                    <Button\n                                        onClick={this.sendQuery.bind(this)}\n                                        className=\"btn btn-success send-query float-right\"\n                                        color=\"success\"\n                                        id=\"send\"\n                                    >\n                                        Send\n                                    </Button>\n                                    <Button\n                                        onClick={this.clearActivity.bind(this)}\n                                        className=\"btn btn-success send-query float-right margin-right\"\n                                        color=\"danger\"\n                                        id=\"reset\"\n                                    >\n                                        Reset\n                                    </Button>\n                                </div>\n                                <a\n                                    href=\"#/resource-management/activity\"\n                                    className={\"display-block clear\"}\n                                >\n                                    <strong>Activity metrics</strong>\n                                    <ListGroup>\n                                        {Object.keys(\n                                            this.state.activityMetrics\n                                        ).map(function(key) {\n                                            var label = key\n                                                // insert a space before all caps\n                                                .replace(/([A-Z])/g, \" $1\")\n                                                .toLowerCase()\n                                                // uppercase the first character\n                                                .replace(/^./, function(str) {\n                                                    return str.toUpperCase();\n                                                });\n\n                                            return (\n                                                <ListGroupItem\n                                                    key={key}\n                                                    className=\"justify-content-between\"\n                                                >\n                                                    {label}{\" \"}\n                                                    <div className=\"float-right\">\n                                                        {\n                                                            this.state\n                                                                .activityMetrics[\n                                                                key\n                                                            ]\n                                                        }\n                                                    </div>\n                                                </ListGroupItem>\n                                            );\n                                        }, this)}\n                                    </ListGroup>\n                                </a>\n                            </CardBody>\n                        </Card>\n                    </Col>}\n                    {this.state.pluginPresence.git &&\n                    <Col xs=\"12\" sm=\"6\" md=\"3\">\n                        <Card>\n                            <CustomCardHeader\n                                cardHeaderText={\"Risk Management\"}\n                                showExpertMode={true}\n                                placement={\"bottom\"}\n                                target={\"Popover3\"}\n                                popoverHeaderText={\"Risk Management\"}\n                                popoverBody={\n                                    \"Risk management helps to identify hotspots of the project.\"\n                                }\n                            />\n                            <CardBody>\n                                <div\n                                    className={\n                                        \"expert-mode-editor hide-expert-mode risk-management\"\n                                    }\n                                >\n                                    <CypherEditor\n                                        className=\"cypheredit\"\n                                        value={this.state.queryHotspot}\n                                        options={{\n                                            mode: \"cypher\",\n                                            theme: \"cypher\"\n                                        }}\n                                        onValueChange={this.updateStateQueryHotspot.bind(\n                                            this\n                                        )}\n                                    />\n                                    <Button\n                                        onClick={this.sendQuery.bind(this)}\n                                        className=\"btn btn-success send-query float-right\"\n                                        color=\"success\"\n                                        id=\"send\"\n                                    >\n                                        Send\n                                    </Button>\n                                    <Button\n                                        onClick={this.clearHotspot.bind(this)}\n                                        className=\"btn btn-success send-query float-right margin-right\"\n                                        color=\"danger\"\n                                        id=\"reset\"\n                                    >\n                                        Reset\n                                    </Button>\n                                </div>\n                                <a\n                                    href=\"#/risk-management/hotspots\"\n                                    className={\"display-block clear\"}\n                                >\n                                    <strong>Hotspot metrics</strong>\n                                    <ListGroup className=\"margin-bottom\">\n                                        {Object.keys(\n                                            this.state.hotspotMetrics\n                                        ).map(function(key) {\n                                            var label = key\n                                                // insert a space before all caps\n                                                .replace(/([A-Z])/g, \" $1\")\n                                                .toLowerCase()\n                                                // uppercase the first character\n                                                .replace(/^./, function(str) {\n                                                    return str.toUpperCase();\n                                                });\n\n                                            return (\n                                                <ListGroupItem\n                                                    key={key}\n                                                    className=\"justify-content-between\"\n                                                >\n                                                    {label}{\" \"}\n                                                    <div className=\"float-right\">\n                                                        {\n                                                            this.state\n                                                                .hotspotMetrics[\n                                                                key\n                                                            ]\n                                                        }\n                                                    </div>\n                                                </ListGroupItem>\n                                            );\n                                        }, this)}\n                                    </ListGroup>\n                                </a>\n                            </CardBody>\n                        </Card>\n                    </Col> }\n                    {(this.state.pluginPresence.jacoco || this.state.pluginPresence.pmd) &&\n                    <Col xs=\"12\" sm=\"6\" md=\"3\">\n                        <Card>\n                            <CustomCardHeader\n                                cardHeaderText={\"Quality Management\"}\n                                showExpertMode={true}\n                                placement={\"bottom\"}\n                                target={\"Popover4\"}\n                                popoverHeaderText={\"Quality Management\"}\n                                popoverBody={\n                                    \"Quality management supports quality monitoring with regard to static code analysis results and test coverage.\"\n                                }\n                            />\n                            <CardBody>\n                            {this.state.pluginPresence.pmd &&\n                                <div\n                                    className={\n                                        \"expert-mode-editor hide-expert-mode quality-management\"\n                                    }\n                                >\n                                    <CypherEditor\n                                        className=\"cypheredit\"\n                                        value={this.state.queryPMD}\n                                        options={{\n                                            mode: \"cypher\",\n                                            theme: \"cypher\"\n                                        }}\n                                        onValueChange={this.updateStateQueryPMD.bind(\n                                            this\n                                        )}\n                                    />\n                                    <Button\n                                        onClick={this.sendQuery.bind(this)}\n                                        className=\"btn btn-success send-query float-right\"\n                                        color=\"success\"\n                                        id=\"send\"\n                                    >\n                                        Send\n                                    </Button>\n                                    <Button\n                                        onClick={this.clearPMD.bind(this)}\n                                        className=\"btn btn-success send-query float-right margin-right\"\n                                        color=\"danger\"\n                                        id=\"reset\"\n                                    >\n                                        Reset\n                                    </Button>\n                                </div>}\n                                {this.state.pluginPresence.pmd &&\n                                <a\n                                    href=\"#/quality-management/static-code-analysis/pmd\"\n                                    className={\"display-block clear\"}\n                                >\n                                    <strong>Static Code Analysis (PMD)</strong>\n                                    <ListGroup className=\"margin-bottom\">\n                                        {Object.keys(\n                                            this.state\n                                                .staticCodeAnalysisPMDMetrics\n                                        ).map(function(key) {\n                                            var label = key\n                                                // insert a space before all caps\n                                                .replace(/([A-Z])/g, \" $1\")\n                                                .toLowerCase()\n                                                // uppercase the first character\n                                                .replace(/^./, function(str) {\n                                                    return str.toUpperCase();\n                                                });\n\n                                            return (\n                                                <ListGroupItem\n                                                    key={key}\n                                                    className=\"justify-content-between\"\n                                                >\n                                                    {label}{\" \"}\n                                                    <div className=\"float-right\">\n                                                        {\n                                                            this.state\n                                                                .staticCodeAnalysisPMDMetrics[\n                                                                key\n                                                            ]\n                                                        }\n                                                    </div>\n                                                </ListGroupItem>\n                                            );\n                                        }, this)}\n                                    </ListGroup>\n                                </a>}\n                                {this.state.pluginPresence.jacoco &&\n                                <div\n                                    className={\n                                        \"expert-mode-editor hide-expert-mode quality-management\"\n                                    }\n                                >\n                                    <CypherEditor\n                                        className=\"cypheredit\"\n                                        value={this.state.queryTestCoverage}\n                                        options={{\n                                            mode: \"cypher\",\n                                            theme: \"cypher\"\n                                        }}\n                                        onValueChange={this.updateStateQueryTestCoverage.bind(\n                                            this\n                                        )}\n                                    />\n                                    <Button\n                                        onClick={this.sendQuery.bind(this)}\n                                        className=\"btn btn-success send-query float-right\"\n                                        color=\"success\"\n                                        id=\"send\"\n                                    >\n                                        Send\n                                    </Button>\n                                    <Button\n                                        onClick={this.clearTestCoverage.bind(\n                                            this\n                                        )}\n                                        className=\"btn btn-success send-query float-right margin-right\"\n                                        color=\"danger\"\n                                        id=\"reset\"\n                                    >\n                                        Reset\n                                    </Button>\n                                </div>}\n                                {this.state.pluginPresence.jacoco &&\n                                <a\n                                    href=\"#/quality-management/test-coverage\"\n                                    className={\"display-block clear\"}\n                                >\n                                    <strong>Test Coverage</strong>\n                                    <ListGroup>\n                                        {Object.keys(\n                                            this.state.testCoverageMetrics\n                                        ).map(function(key) {\n                                            var label = key\n                                                // insert a space before all caps\n                                                .replace(/([A-Z])/g, \" $1\")\n                                                .toLowerCase()\n                                                // uppercase the first character\n                                                .replace(/^./, function(str) {\n                                                    return str.toUpperCase();\n                                                });\n\n                                            return (\n                                                <ListGroupItem\n                                                    key={key}\n                                                    className=\"justify-content-between\"\n                                                >\n                                                    {label}{\" \"}\n                                                    <div className=\"float-right\">\n                                                        {\n                                                            this.state\n                                                                .testCoverageMetrics[\n                                                                key\n                                                            ]\n                                                        }\n                                                        %\n                                                    </div>\n                                                </ListGroupItem>\n                                            );\n                                        }, this)}\n                                    </ListGroup>\n                                </a>}\n                            </CardBody>\n                        </Card>\n                    </Col>}\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}