{"version":3,"sources":["views/Dashboard/AbstractDashboardComponent.js","AppDispatcher.js","views/Dashboard/Header/Settings.js"],"names":["AppDispatcher","require","neo4j","localStorage","getItem","neo4jDriver","neo4jSession","databaseCredentialsProvided","databaseCredentialsCorrect","GenericException","message","name","this","DashboardAbstract","handleAction","bind","setState","dispatcherEventId","register","Promise","checkForDatabaseConnection","then","testDatabaseCredentials","connectionString","username","password","refreshConnectionSettings","testrun","v1","driver","auth","basic","session","run","catch","error","unregister","state","event","action","actionType","stateData","data","rdir","console","log","baseUrl","window","location","protocol","host","href","replace","push","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","key","to","neo4jPassword","neo4jUsername","process","REACT_APP_NEO4J_IP","REACT_APP_NEO4J_USERNAME","REACT_APP_NEO4J_PASSWORD","setItem","projectName","REACT_APP_PROJECT_NAME","limitCountingHotspots","REACT_APP_LIMIT_COUNTING_HOTSPOTS","Component","Dispatcher","dispatch","source","module","exports","localStorageConnectionString","localStorageNeo4jUsername","localStorageNeo4jPassword","localStorageProjectName","localStorageLimitCountingHotspots","handleDatabaseError","document","getElementById","innerHTML","className","style","display","Settings","props","_this","Object","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","popoverOpen","popovers","placement","text","updateSettings","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","resetSettings","toggleInfo","_home_sebastian_work_Projects_jqa_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_4__","prototype","settings","querySelectorAll","forEach","setting","identifier","id","value","e","removeItem","react__WEBPACK_IMPORTED_MODULE_7___default","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","xs","md","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_13__","isOpen","target","toggle","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","method","encType","reactstrap__WEBPACK_IMPORTED_MODULE_18__","row","reactstrap__WEBPACK_IMPORTED_MODULE_19__","htmlFor","IDENTIFIER_CONNECTION_STRING","reactstrap__WEBPACK_IMPORTED_MODULE_20__","type","placeholder","defaultValue","required","reactstrap__WEBPACK_IMPORTED_MODULE_21__","color","IDENTIFIER_NEO4J_USERNAME","IDENTIFIER_NEO4J_PASSWORD","IDENTIFIER_PROJECT_NAME","IDENTIFIER_LIMIT_COUNTING_HOTSPOTS","reactstrap__WEBPACK_IMPORTED_MODULE_22__","reactstrap__WEBPACK_IMPORTED_MODULE_23__"],"mappings":"gQAEIA,EAAgBC,EAAQ,KAMxBC,GAJwBC,aAAaC,QAAQ,oBAC7BD,aAAaC,QAAQ,YACrBD,aAAaC,QAAQ,YAE7B,MACRC,EAAc,KACdC,EAAe,KAEfC,GAA8B,EAC9BC,GAA6B,EAEjC,SAASC,EAAiBC,EAASC,GAC/BC,KAAKF,QAAUA,EACfE,KAAKD,KAAOA,MAGVE,+LA+DE,OALAD,KAAKE,aAAeF,KAAKE,aAAaC,KAAKH,MAC3CA,KAAKI,SAAS,CACVC,kBAAmBjB,EAAckB,SAASN,KAAKE,gBAG5C,IAAIK,QAAQN,EAAkBO,4BAA4BC,KAC7DT,KAAKU,6EAKT,IAAIC,EACAC,EACAC,EAMJ,GAJAF,EAAmBpB,aAAaC,QAAQ,oBACxCoB,EAAWrB,aAAaC,QAAQ,YAChCqB,EAAWtB,aAAaC,QAAQ,YAE5BG,EAgBA,OAfAK,KAAKc,4BAIDxB,EADmB,qBAAZyB,QACC1B,EAAQ,KAERA,EAAQ,KAGpBI,EAAcH,EAAM0B,GAAGC,OACnB,UAAYN,EACZrB,EAAM0B,GAAGE,KAAKC,MAAMP,EAAUC,KAElCnB,EAAeD,EAAY2B,WAGtBC,IAAI,8BACJZ,KAAK,WACFb,GAA6B,IAEhC0B,MAAM,SAASC,GAGZ,MAFA3B,GAA6B,EACL,GAClB,IAAIC,EACN,mCACA,yIASQN,aAAaC,QAAQ,oBAC7BD,aAAaC,QAAQ,YACrBD,aAAaC,QAAQ,2DAWrCJ,EAAcoC,WAAWxB,KAAKyB,MAAMpB,wDAG3BqB,GAET,OADaA,EAAMC,OACJC,YACX,IAAK,YACD,IAAIC,EAAYH,EAAMC,OAAOG,KAC7B9B,KAAKI,SAASyB,qCAQtB,IAAIE,EAAO,GACX,IAAKpC,IAAgCC,EAA4B,CAC7DoC,QAAQC,IAAI,uDACZ,IAAIC,EACAC,OAAOC,SAASC,SAAW,KAAOF,OAAOC,SAASE,KAAO,KAEhD,cADFH,OAAOC,SAASG,KAAKC,QAAQN,EAAS,KAE7CH,EAAKU,KAAKC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,IAAI,QAAQC,GAAG,eAI3C,OAAOhB,yDAtJP,IAAIpB,EAAmBpB,aAAaC,QAAQ,oBACxCwD,EAAgBzD,aAAaC,QAAQ,YACrCyD,EAAgB1D,aAAaC,QAAQ,YAWzC,KATAG,EACyB,OAArBgB,GACqB,KAArBA,GACkB,OAAlBqC,GACkB,KAAlBA,GACkB,OAAlBC,GACkB,KAAlBA,IAK0C,qBAAnCC,+CAAYC,oBAC6B,qBAAzCD,+CAAYE,0BAC6B,qBAAzCF,+CAAYG,yBACrB,CACE9D,aAAa+D,QACT,mBACAJ,+CAAYC,oBAEhB5D,aAAa+D,QACT,WACAJ,+CAAYE,0BAEhB7D,aAAa+D,QACT,WACAJ,+CAAYG,0BAGhB,IAAIE,EAAc,aACgC,qBAAvCL,+CAAYM,yBACnBD,EAAcL,+CAAYM,wBAE9BjE,aAAa+D,QAAQ,cAAeC,GAEpC,IAAIE,EAAwB,KAGxB,qBADOP,+CAAYQ,oCAGnBD,EACIP,+CAAYQ,mCAEpBnE,aAAa+D,QACT,wBACAG,GAGJ9D,GAA8B,UArDVgE,aA4JjB1D,2BChLf,IAGIb,EAAgB,IAAIwE,EAHPvE,EAAQ,KAAQuE,YAMjCxE,EAAcc,aAAe,SAAUyB,GACrC3B,KAAK6D,SAAS,CACZC,OAAQ,cACRnC,OAAQA,KAIZoC,EAAOC,QAAU5E,wQCiBbA,EAAgBC,EAAQ,KACxB4E,EAA+B1E,aAAaC,QANX,oBASjC0E,EAA4B3E,aAAaC,QARX,YAS9B2E,EAA4B5E,aAAaC,QARX,YAS9B4E,EAA0B7E,aAAaC,QAZX,eAa5B6E,EAAoC9E,aAAaC,QATV,yBAa3C,SAAS8E,EAAoB/C,GACzBS,QAAQC,IAAIV,GACZhC,aAAa+D,QAAQ,mBAAoB,IACzCiB,SAASC,eAAe,2BAA2BC,UAC/C,mFACJF,SAASC,eAAe,2BAA2BE,UAC/C,0DACJH,SAASC,eAAe,2BAA2BG,MAAMC,QAAU,YAGjEC,cACF,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAhF,KAAA6E,IACfE,EAAAC,OAAAE,EAAA,EAAAF,CAAAhF,KAAAgF,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAApF,KAAM8E,KAEDrD,MAAQ,CACT4D,aAAa,EACbC,SAAU,CACN,CACIC,UAAW,SACXC,KAAM,YAKlBT,EAAKU,eAAiBV,EAAKU,eAAetF,KAApB6E,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACtBA,EAAKY,cAAgBZ,EAAKY,cAAcxF,KAAnB6E,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KACrBA,EAAKa,WAAab,EAAKa,WAAWzF,KAAhB6E,OAAAU,EAAA,EAAAV,QAAAU,EAAA,EAAAV,CAAAD,KAfHA,oFAmBf/E,KAAKE,aAAeF,KAAKE,aAAaC,KAAKH,MAC3CA,KAAKI,SAAS,CACVC,kBAAmBjB,EAAckB,SAASN,KAAKE,4GASnDd,EAAcoC,WAAWxB,KAAKyB,MAAMpB,8EAKpC2E,OAAAa,EAAA,EAAAb,QAAAG,EAAA,EAAAH,CAAAH,EAAAiB,WAAA,4BAAA9F,MAAAoF,KAAApF,6CAGW0B,GACX,IAAIqE,EAAWxB,SAASyB,iBAAiB,YAGzC,GAAGC,QAAQb,KAAKW,EAAU,SAASG,GAC/B,IAAIC,EAAaD,EAAQE,GAAG5D,QAAQ,SAAU,IAC9CjD,aAAa+D,QAAQ6C,EAAYD,EAAQG,SAG7C,IAGI,GAFApG,IAAkBO,8BAEbb,IACD,MAAM,IAAIE,IACN,yCACA,+BAIRmF,OAAAa,EAAA,EAAAb,QAAAG,EAAA,EAAAH,CAAAH,EAAAiB,WAAA,0BAAA9F,MAAAoF,KAAApF,MAEKS,KAAK,WAEF8D,SAASC,eACL,2BACFC,UAAY,+BACdF,SAASC,eACL,2BACFE,UACE,2DACJH,SAASC,eACL,2BACFG,MAAMC,QAAU,UAErBtD,MAAMgD,GACb,MAAOgC,GAELhC,EAAoBgC,0CAId5E,GACV,IAAIqE,EAAWxB,SAASyB,iBAAiB,YAkCzC,GA/BA,GAAGC,QAAQb,KAAKW,EAAU,SAASG,GAC/B,IAAIC,EAAaD,EAAQE,GAAG5D,QAAQ,SAAU,IAE9C,OAAQ2D,GACJ,IAAK,mBACDD,EAAQG,MACJnD,+CAAYC,oBAAsB,YACtC,MACJ,IAAK,WACD+C,EAAQG,MACJnD,+CAAYE,0BAA4B,QAC5C,MACJ,IAAK,WACD8C,EAAQG,MACJnD,+CAAYG,0BAA4B,QAC5C,MACJ,IAAK,cACD6C,EAAQG,MACJnD,+CAAYM,wBAA0B,aAC1C,MACJ,IAAK,wBACD0C,EAAQG,MACJnD,+CAAYQ,mCAAqC,GAK7DnE,aAAagH,WAAWJ,KAKkB,qBAAnCjD,+CAAYC,oBAC6B,qBAAzCD,+CAAYE,0BAC6B,qBAAzCF,+CAAYG,yBACrB,CACE9D,aAAa+D,QACT,mBACAJ,+CAAYC,oBAEhB5D,aAAa+D,QACT,WACAJ,+CAAYE,0BAEhB7D,aAAa+D,QACT,WACAJ,+CAAYG,0BAGhB,IAAIE,EAAc,aACgC,qBAAvCL,+CAAYM,yBACnBD,EAAcL,+CAAYM,wBAE9BjE,aAAa+D,QAAQ,cAAeC,GAEpC,IAAIE,EAAwB,KAGxB,qBADOP,+CAAYQ,oCAGnBD,EACIP,+CAAYQ,mCAEpBnE,aAAa+D,QACT,wBACAG,yCAMRzD,KAAKI,SAAS,CACViF,aAAcrF,KAAKyB,MAAM4D,+CAoB7B,OAdApB,EAA+B1E,aAAaC,QA5Lf,oBA+L7B0E,EAA4B3E,aAAaC,QA9Lf,YAiM1B2E,EAA4B5E,aAAaC,QAhMf,YAmM1B4E,EAA0B7E,aAAaC,QAtMf,eAuMxB6E,EAAoC9E,aAAaC,QAnMd,yBAwM/BgH,EAAA7D,EAAAC,cAAA,OAAK8B,UAAU,mBACX8B,EAAA7D,EAAAC,cAAC6D,EAAA,EAAD,KACID,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACZJ,EAAA7D,EAAAC,cAACiE,EAAA,EAAD,KACIL,EAAA7D,EAAAC,cAACkE,EAAA,EAAD,gBAEIN,EAAA7D,EAAAC,cAAA,OAAK8B,UAAU,gBACX8B,EAAA7D,EAAAC,cAAA,UACImE,QAAS/G,KAAK4F,WACdQ,GAAG,YAEHI,EAAA7D,EAAAC,cAAA,KAAG8B,UAAU,sCAEjB8B,EAAA7D,EAAAC,cAACoE,EAAA,EAAD,CACIzB,UAAU,SACV0B,OAAQjH,KAAKyB,MAAM4D,YACnB6B,OAAO,WACPC,OAAQnH,KAAK4F,YAEbY,EAAA7D,EAAAC,cAACwE,EAAA,EAAD,iBACAZ,EAAA7D,EAAAC,cAACyE,EAAA,EAAD,wJASZb,EAAA7D,EAAAC,cAAC0E,EAAA,EAAD,CAAU5C,UAAW,YACjB8B,EAAA7D,EAAAC,cAAC2E,EAAA,EAAD,CACI5F,OAAO,GACP6F,OAAO,OACPC,QAAQ,sBACR/C,UAAU,mBAEV8B,EAAA7D,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,KAAG,GACVnB,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKE,GAAG,MACJJ,EAAA7D,EAAAC,cAAA,4BAGR4D,EAAA7D,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,KAAG,GACVnB,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKE,GAAG,KACJJ,EAAA7D,EAAAC,cAACgF,EAAA,EAAD,CACIC,QACIC,0BAFR,OASJtB,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACZJ,EAAA7D,EAAAC,cAACmF,EAAA,EAAD,CACIC,KAAK,OACL5B,GACI0B,yBAGJ/H,KACI+H,yBAGJpD,UAAW,UACXuD,YAAY,4CACZC,aAEQ,OADJjE,GAGI,KADJA,EAEMA,EACA,YAEVkE,UAAQ,IAEZ3B,EAAA7D,EAAAC,cAACwF,EAAA,EAAD,CAAUC,MAAM,SAAhB,mJASR7B,EAAA7D,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,KAAG,GACVnB,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKE,GAAG,KACJJ,EAAA7D,EAAAC,cAACgF,EAAA,EAAD,CACIC,QACIS,kBAFR,aASJ9B,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACZJ,EAAA7D,EAAAC,cAACmF,EAAA,EAAD,CACIC,KAAK,OACL5B,GACIkC,iBAGJvI,KACIuI,iBAGJ5D,UAAW,UACXuD,YAAY,mCACZC,aAEQ,OADJhE,GAGI,KADJA,EAEMA,EACA,QAEViE,UAAQ,IAEZ3B,EAAA7D,EAAAC,cAACwF,EAAA,EAAD,CAAU1D,UAAU,cAApB,sBAKR8B,EAAA7D,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,KAAG,GACVnB,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKE,GAAG,KACJJ,EAAA7D,EAAAC,cAACgF,EAAA,EAAD,CACIC,QACIU,kBAFR,aASJ/B,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACZJ,EAAA7D,EAAAC,cAACmF,EAAA,EAAD,CACIC,KAAK,WACL5B,GACImC,iBAGJxI,KACIwI,iBAGJ7D,UAAW,UACXuD,YAAY,mCACZC,aAEQ,OADJ/D,GAGI,KADJA,EAEMA,EACA,QAEVgE,UAAQ,IAEZ3B,EAAA7D,EAAAC,cAACwF,EAAA,EAAD,CAAU1D,UAAU,cAApB,sBAKR8B,EAAA7D,EAAAC,cAAA,WACA4D,EAAA7D,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,KAAG,GACVnB,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKE,GAAG,MACJJ,EAAA7D,EAAAC,cAAA,2BAGR4D,EAAA7D,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,KAAG,GACVnB,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKE,GAAG,KACJJ,EAAA7D,EAAAC,cAACgF,EAAA,EAAD,CACIC,QACIW,qBAFR,SASJhC,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACZJ,EAAA7D,EAAAC,cAACmF,EAAA,EAAD,CACIC,KAAK,OACL5B,GACIoC,oBAGJzI,KACIyI,oBAGJ9D,UAAW,UACXuD,YAAY,iCACZC,aAEQ,OADJ9D,GAGI,KADJA,EAEMA,EACA,aAEV+D,UAAQ,IAEZ3B,EAAA7D,EAAAC,cAACwF,EAAA,EAAD,CAAUC,MAAM,SAAhB,sBAKR7B,EAAA7D,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,KAAG,GACVnB,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKE,GAAG,KACJJ,EAAA7D,EAAAC,cAACgF,EAAA,EAAD,CACIC,QACIY,+BAFR,iCASJjC,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KACZJ,EAAA7D,EAAAC,cAACmF,EAAA,EAAD,CACIC,KAAK,OACL5B,GACIqC,8BAGJ1I,KACI0I,8BAGJ/D,UAAW,UACXuD,YAAY,2DACZC,aAEQ,OADJ7D,GAGI,KADJA,EAEMA,EACA,KAEV8D,UAAQ,IAEZ3B,EAAA7D,EAAAC,cAACwF,EAAA,EAAD,CAAUC,MAAM,SAAhB,+IASR7B,EAAA7D,EAAAC,cAAC8E,EAAA,EAAD,CAAWC,KAAG,EAACjD,UAAU,cACrB8B,EAAA7D,EAAAC,cAAC8D,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,MACZJ,EAAA7D,EAAAC,cAAC8F,EAAA,EAAD,CACIhE,UAAU,cACV2D,MAAM,UACNtB,QAAS/G,KAAKyF,eACdW,GAAG,QAJP,QAQAI,EAAA7D,EAAAC,cAAC8F,EAAA,EAAD,CACIhE,UAAU,2BACV2D,MAAM,SACNtB,QAAS/G,KAAK2F,cACdS,GAAG,SAJP,kBAQAI,EAAA7D,EAAAC,cAAC+F,EAAA,EAAD,CACIvC,GAAG,0BACH1B,UAAU,6BACV2D,MAAM,WAHV,+CA7brBpI,KAgdR4E","file":"static/js/18.e1519127.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nvar AppDispatcher = require(\"../../AppDispatcher\");\n\nvar neo4jConnectionString = localStorage.getItem(\"connectionString\"); //\"localhost\";\nvar neo4jUsername = localStorage.getItem(\"username\"); //\"neo4j\";\nvar neo4jPassword = localStorage.getItem(\"password\"); //\"Test123.\";\n\nvar neo4j = null;\nvar neo4jDriver = null;\nvar neo4jSession = null;\n\nvar databaseCredentialsProvided = false;\nvar databaseCredentialsCorrect = true;\n\nfunction GenericException(message, name) {\n    this.message = message;\n    this.name = name;\n}\n\nclass DashboardAbstract extends Component {\n    static checkForDatabaseConnection() {\n        var connectionString = localStorage.getItem(\"connectionString\");\n        var neo4jPassword = localStorage.getItem(\"password\");\n        var neo4jUsername = localStorage.getItem(\"username\");\n\n        databaseCredentialsProvided =\n            connectionString !== null &&\n            connectionString !== \"\" &&\n            neo4jPassword !== null &&\n            neo4jPassword !== \"\" &&\n            neo4jUsername !== null &&\n            neo4jUsername !== \"\";\n\n        // if database credentials are provided via .env file, we load them initially\n        if (\n            !databaseCredentialsProvided &&\n            typeof process.env.REACT_APP_NEO4J_IP !== \"undefined\" &&\n            typeof process.env.REACT_APP_NEO4J_USERNAME !== \"undefined\" &&\n            typeof process.env.REACT_APP_NEO4J_PASSWORD !== \"undefined\"\n        ) {\n            localStorage.setItem(\n                \"connectionString\",\n                process.env.REACT_APP_NEO4J_IP\n            );\n            localStorage.setItem(\n                \"username\",\n                process.env.REACT_APP_NEO4J_USERNAME\n            );\n            localStorage.setItem(\n                \"password\",\n                process.env.REACT_APP_NEO4J_PASSWORD\n            );\n\n            var projectName = \"My project\";\n            if (typeof process.env.REACT_APP_PROJECT_NAME !== \"undefined\") {\n                projectName = process.env.REACT_APP_PROJECT_NAME;\n            }\n            localStorage.setItem(\"projectName\", projectName);\n\n            var limitCountingHotspots = \"70\";\n            if (\n                typeof process.env.REACT_APP_LIMIT_COUNTING_HOTSPOTS !==\n                \"undefined\"\n            ) {\n                limitCountingHotspots =\n                    process.env.REACT_APP_LIMIT_COUNTING_HOTSPOTS;\n            }\n            localStorage.setItem(\n                \"limitCountingHotspots\",\n                limitCountingHotspots\n            );\n\n            databaseCredentialsProvided = true;\n        }\n    }\n\n    componentWillMount() {\n        this.handleAction = this.handleAction.bind(this);\n        this.setState({\n            dispatcherEventId: AppDispatcher.register(this.handleAction)\n        });\n\n        return new Promise(DashboardAbstract.checkForDatabaseConnection).then(\n            this.testDatabaseCredentials()\n        );\n    }\n\n    testDatabaseCredentials() {\n        var connectionString = neo4jConnectionString;\n        var username = neo4jUsername;\n        var password = neo4jPassword;\n\n        connectionString = localStorage.getItem(\"connectionString\"); //if we're on settings page and trying to validate new credentials\n        username = localStorage.getItem(\"username\"); //if we're on settings page and trying to validate new credentials\n        password = localStorage.getItem(\"password\"); //if we're on settings page and trying to validate new credentials\n\n        if (databaseCredentialsProvided) {\n            this.refreshConnectionSettings(); //set to abstract variables\n\n            //TODO: check if there is a better method for running dashboard and test components\n            if (typeof testrun !== \"undefined\") {\n                neo4j = require(\"neo4j-driver\");\n            } else {\n                neo4j = require(\"neo4j-driver/lib/browser/neo4j-web\");\n            }\n\n            neo4jDriver = neo4j.v1.driver(\n                \"bolt://\" + connectionString,\n                neo4j.v1.auth.basic(username, password)\n            );\n            neo4jSession = neo4jDriver.session();\n\n            return neo4jSession\n                .run(\"match (n) return n limit 1\") //this should be as generic as possible =)\n                .then(function() {\n                    databaseCredentialsCorrect = true;\n                })\n                .catch(function(error) {\n                    databaseCredentialsCorrect = false;\n                    neo4jConnectionString = \"\";\n                    throw new GenericException(\n                        \"Invalid database connection data\",\n                        \"InvalidDatabaseConnectionException\"\n                    );\n                }); //handle wrong credentials\n        } //end if\n    }\n\n    componentDidMount() {}\n\n    refreshConnectionSettings() {\n        neo4jConnectionString = localStorage.getItem(\"connectionString\"); //\"localhost\";\n        neo4jUsername = localStorage.getItem(\"username\"); //\"neo4j\";\n        neo4jPassword = localStorage.getItem(\"password\"); //\"Test123.\";\n    }\n\n    componentWillUnmount() {\n        if (neo4jSession !== null) {\n            //neo4jSession.close(); //TODO: this triggers (atm) WebSocket is closed before the connection is established. > disabled\n        }\n        if (neo4jDriver !== null) {\n            //neo4jDriver.close(); //TODO: this triggers (atm) WebSocket is closed before the connection is established. > disabled\n        }\n\n        AppDispatcher.unregister(this.state.dispatcherEventId);\n    }\n\n    handleAction(event) {\n        var action = event.action;\n        switch (action.actionType) {\n            case \"SET_STATE\":\n                var stateData = event.action.data;\n                this.setState(stateData);\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        var rdir = [];\n        if (!databaseCredentialsProvided || !databaseCredentialsCorrect) {\n            console.log(\"No database credentials, redirecting to settings...\");\n            var baseUrl =\n                window.location.protocol + \"//\" + window.location.host + \"/#\";\n            var path = window.location.href.replace(baseUrl, \"\");\n            if (path !== \"/settings\") {\n                rdir.push(<Redirect key=\"dummy\" to=\"/settings\" />);\n            }\n        }\n\n        return rdir;\n    }\n}\n\nexport default DashboardAbstract;\nexport {\n    neo4j,\n    neo4jSession,\n    databaseCredentialsProvided,\n    databaseCredentialsCorrect,\n    GenericException\n};\n","var Dispatcher = require('flux').Dispatcher;\n\n// Create dispatcher instance\nvar AppDispatcher = new Dispatcher();\n\n// Convenience method to handle dispatch requests\nAppDispatcher.handleAction = function (action) {\n  this.dispatch({\n    source: 'VIEW_ACTION',\n    action: action\n  });\n}\n\nmodule.exports = AppDispatcher;","import React from \"react\";\nimport DashboardAbstract, {\n    databaseCredentialsProvided,\n    GenericException\n} from \"../AbstractDashboardComponent\";\n\nimport {\n    Alert,\n    Row,\n    Col,\n    Card,\n    CardBody,\n    CardHeader,\n    Button,\n    Form,\n    FormGroup,\n    FormText,\n    Label,\n    Input,\n    Popover,\n    PopoverBody,\n    PopoverHeader\n} from \"reactstrap\";\n\nconst IDENTIFIER_PROJECT_NAME = \"projectName\";\nconst IDENTIFIER_CONNECTION_STRING = \"connectionString\";\nconst IDENTIFIER_NEO4J_USERNAME = \"username\";\nconst IDENTIFIER_NEO4J_PASSWORD = \"password\";\nconst IDENTIFIER_LIMIT_COUNTING_HOTSPOTS = \"limitCountingHotspots\";\n\nvar AppDispatcher = require(\"../../../AppDispatcher\");\nvar localStorageConnectionString = localStorage.getItem(\n    IDENTIFIER_CONNECTION_STRING\n);\nvar localStorageNeo4jUsername = localStorage.getItem(IDENTIFIER_NEO4J_USERNAME);\nvar localStorageNeo4jPassword = localStorage.getItem(IDENTIFIER_NEO4J_PASSWORD);\nvar localStorageProjectName = localStorage.getItem(IDENTIFIER_PROJECT_NAME);\nvar localStorageLimitCountingHotspots = localStorage.getItem(\n    IDENTIFIER_LIMIT_COUNTING_HOTSPOTS\n);\n\nfunction handleDatabaseError(error) {\n    console.log(error);\n    localStorage.setItem(\"connectionString\", \"\"); //reset connection string to prevent further access\n    document.getElementById(\"database-settings-alert\").innerHTML =\n        \"Connection failure: please check the provided data and if the server is running.\";\n    document.getElementById(\"database-settings-alert\").className =\n        \"float-right settings-alert alert alert-danger fade show\";\n    document.getElementById(\"database-settings-alert\").style.display = \"block\";\n}\n\nclass Settings extends DashboardAbstract {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            popoverOpen: false,\n            popovers: [\n                {\n                    placement: \"bottom\",\n                    text: \"Bottom\"\n                }\n            ]\n        };\n\n        this.updateSettings = this.updateSettings.bind(this);\n        this.resetSettings = this.resetSettings.bind(this);\n        this.toggleInfo = this.toggleInfo.bind(this);\n    }\n\n    componentWillMount() {\n        this.handleAction = this.handleAction.bind(this);\n        this.setState({\n            dispatcherEventId: AppDispatcher.register(this.handleAction)\n        });\n    }\n\n    componentDidMount() {\n        //super.componentDidMount(); //do nothing, we don't need a database here\n    }\n\n    componentWillUnmount() {\n        AppDispatcher.unregister(this.state.dispatcherEventId);\n    }\n\n    refreshConnectionSettingsWrapper() {\n        //wrapper because it is not possible to access thisBackup.super.function...\n        super.refreshConnectionSettings();\n    }\n\n    updateSettings(event) {\n        var settings = document.querySelectorAll(\".setting\");\n\n        // save settings to localStorage\n        [].forEach.call(settings, function(setting) {\n            var identifier = setting.id.replace(\"-input\", \"\");\n            localStorage.setItem(identifier, setting.value);\n        });\n\n        try {\n            DashboardAbstract.checkForDatabaseConnection();\n\n            if (!databaseCredentialsProvided) {\n                throw new GenericException(\n                    \"Database connection parameter missing.\",\n                    \"DatabaseConncetionException\"\n                );\n            }\n\n            super\n                .testDatabaseCredentials()\n                .then(function() {\n                    // show success message\n                    document.getElementById(\n                        \"database-settings-alert\"\n                    ).innerHTML = \"Successfully saved settings.\";\n                    document.getElementById(\n                        \"database-settings-alert\"\n                    ).className =\n                        \"float-right settings-alert alert alert-success fade show\";\n                    document.getElementById(\n                        \"database-settings-alert\"\n                    ).style.display = \"block\";\n                })\n                .catch(handleDatabaseError); //check database connection\n        } catch (e) {\n            //handle missing credentials\n            handleDatabaseError(e);\n        }\n    }\n\n    resetSettings(event) {\n        var settings = document.querySelectorAll(\".setting\");\n\n        // clear inputs\n        [].forEach.call(settings, function(setting) {\n            var identifier = setting.id.replace(\"-input\", \"\");\n\n            switch (identifier) {\n                case \"connectionString\":\n                    setting.value =\n                        process.env.REACT_APP_NEO4J_IP || \"localhost\";\n                    break;\n                case \"username\":\n                    setting.value =\n                        process.env.REACT_APP_NEO4J_USERNAME || \"neo4j\";\n                    break;\n                case \"password\":\n                    setting.value =\n                        process.env.REACT_APP_NEO4J_PASSWORD || \"neo4j\";\n                    break;\n                case \"projectName\":\n                    setting.value =\n                        process.env.REACT_APP_PROJECT_NAME || \"My project\";\n                    break;\n                case \"limitCountingHotspots\":\n                    setting.value =\n                        process.env.REACT_APP_LIMIT_COUNTING_HOTSPOTS || 70;\n                    break;\n                default:\n            }\n\n            localStorage.removeItem(identifier);\n        });\n\n        // if database credentials are provided via .env file, we load them now\n        if (\n            typeof process.env.REACT_APP_NEO4J_IP !== \"undefined\" &&\n            typeof process.env.REACT_APP_NEO4J_USERNAME !== \"undefined\" &&\n            typeof process.env.REACT_APP_NEO4J_PASSWORD !== \"undefined\"\n        ) {\n            localStorage.setItem(\n                \"connectionString\",\n                process.env.REACT_APP_NEO4J_IP\n            );\n            localStorage.setItem(\n                \"username\",\n                process.env.REACT_APP_NEO4J_USERNAME\n            );\n            localStorage.setItem(\n                \"password\",\n                process.env.REACT_APP_NEO4J_PASSWORD\n            );\n\n            var projectName = \"My project\";\n            if (typeof process.env.REACT_APP_PROJECT_NAME !== \"undefined\") {\n                projectName = process.env.REACT_APP_PROJECT_NAME;\n            }\n            localStorage.setItem(\"projectName\", projectName);\n\n            var limitCountingHotspots = \"70\";\n            if (\n                typeof process.env.REACT_APP_LIMIT_COUNTING_HOTSPOTS !==\n                \"undefined\"\n            ) {\n                limitCountingHotspots =\n                    process.env.REACT_APP_LIMIT_COUNTING_HOTSPOTS;\n            }\n            localStorage.setItem(\n                \"limitCountingHotspots\",\n                limitCountingHotspots\n            );\n        }\n    }\n\n    toggleInfo() {\n        this.setState({\n            popoverOpen: !this.state.popoverOpen\n        });\n    }\n\n    render() {\n        // redefine variables to fix default values when toggling different pages\n        localStorageConnectionString = localStorage.getItem(\n            IDENTIFIER_CONNECTION_STRING\n        );\n        localStorageNeo4jUsername = localStorage.getItem(\n            IDENTIFIER_NEO4J_USERNAME\n        );\n        localStorageNeo4jPassword = localStorage.getItem(\n            IDENTIFIER_NEO4J_PASSWORD\n        );\n        localStorageProjectName = localStorage.getItem(IDENTIFIER_PROJECT_NAME);\n        localStorageLimitCountingHotspots = localStorage.getItem(\n            IDENTIFIER_LIMIT_COUNTING_HOTSPOTS\n        );\n\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col xs=\"12\" md=\"6\">\n                        <Card>\n                            <CardHeader>\n                                Settings\n                                <div className=\"card-actions\">\n                                    <button\n                                        onClick={this.toggleInfo}\n                                        id=\"Popover2\"\n                                    >\n                                        <i className=\"text-muted fa fa-question-circle\" />\n                                    </button>\n                                    <Popover\n                                        placement=\"bottom\"\n                                        isOpen={this.state.popoverOpen}\n                                        target=\"Popover2\"\n                                        toggle={this.toggleInfo}\n                                    >\n                                        <PopoverHeader>Settings</PopoverHeader>\n                                        <PopoverBody>\n                                            Please enter the required connection\n                                            details of the Neo4j database and\n                                            the name of your project. Confirm\n                                            your entries by clicking on \"Save\".\n                                        </PopoverBody>\n                                    </Popover>\n                                </div>\n                            </CardHeader>\n                            <CardBody className={\"settings\"}>\n                                <Form\n                                    action=\"\"\n                                    method=\"post\"\n                                    encType=\"multipart/form-data\"\n                                    className=\"form-horizontal\"\n                                >\n                                    <FormGroup row>\n                                        <Col md=\"12\">\n                                            <strong>Database</strong>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col md=\"3\">\n                                            <Label\n                                                htmlFor={\n                                                    IDENTIFIER_CONNECTION_STRING +\n                                                    \"-input\"\n                                                }\n                                            >\n                                                IP\n                                            </Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"9\">\n                                            <Input\n                                                type=\"text\"\n                                                id={\n                                                    IDENTIFIER_CONNECTION_STRING +\n                                                    \"-input\"\n                                                }\n                                                name={\n                                                    IDENTIFIER_CONNECTION_STRING +\n                                                    \"-input\"\n                                                }\n                                                className={\"setting\"}\n                                                placeholder=\"Please provide Neo4j connection string...\"\n                                                defaultValue={\n                                                    localStorageConnectionString !==\n                                                        null &&\n                                                    localStorageConnectionString !==\n                                                        \"\"\n                                                        ? localStorageConnectionString\n                                                        : \"localhost\"\n                                                }\n                                                required\n                                            />\n                                            <FormText color=\"muted\">\n                                                The dashboard uses the bolt\n                                                protocol to connect to the\n                                                database. Please ensure that the\n                                                Neo4j bolt connector is enabled.\n                                                Default: \"localhost\"\n                                            </FormText>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col md=\"3\">\n                                            <Label\n                                                htmlFor={\n                                                    IDENTIFIER_NEO4J_USERNAME +\n                                                    \"-input\"\n                                                }\n                                            >\n                                                Username\n                                            </Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"9\">\n                                            <Input\n                                                type=\"text\"\n                                                id={\n                                                    IDENTIFIER_NEO4J_USERNAME +\n                                                    \"-input\"\n                                                }\n                                                name={\n                                                    IDENTIFIER_NEO4J_USERNAME +\n                                                    \"-input\"\n                                                }\n                                                className={\"setting\"}\n                                                placeholder=\"Please provide Neo4j username...\"\n                                                defaultValue={\n                                                    localStorageNeo4jUsername !==\n                                                        null &&\n                                                    localStorageNeo4jUsername !==\n                                                        \"\"\n                                                        ? localStorageNeo4jUsername\n                                                        : \"neo4j\"\n                                                }\n                                                required\n                                            />\n                                            <FormText className=\"help-block\">\n                                                Default: \"neo4j\"\n                                            </FormText>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col md=\"3\">\n                                            <Label\n                                                htmlFor={\n                                                    IDENTIFIER_NEO4J_PASSWORD +\n                                                    \"-input\"\n                                                }\n                                            >\n                                                Password\n                                            </Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"9\">\n                                            <Input\n                                                type=\"password\"\n                                                id={\n                                                    IDENTIFIER_NEO4J_PASSWORD +\n                                                    \"-input\"\n                                                }\n                                                name={\n                                                    IDENTIFIER_NEO4J_PASSWORD +\n                                                    \"-input\"\n                                                }\n                                                className={\"setting\"}\n                                                placeholder=\"Please provide Neo4j password...\"\n                                                defaultValue={\n                                                    localStorageNeo4jPassword !==\n                                                        null &&\n                                                    localStorageNeo4jPassword !==\n                                                        \"\"\n                                                        ? localStorageNeo4jPassword\n                                                        : \"neo4j\"\n                                                }\n                                                required\n                                            />\n                                            <FormText className=\"help-block\">\n                                                Default: \"neo4j\"\n                                            </FormText>\n                                        </Col>\n                                    </FormGroup>\n                                    <hr />\n                                    <FormGroup row>\n                                        <Col md=\"12\">\n                                            <strong>Project</strong>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col md=\"3\">\n                                            <Label\n                                                htmlFor={\n                                                    IDENTIFIER_PROJECT_NAME +\n                                                    \"-input\"\n                                                }\n                                            >\n                                                Name\n                                            </Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"9\">\n                                            <Input\n                                                type=\"text\"\n                                                id={\n                                                    IDENTIFIER_PROJECT_NAME +\n                                                    \"-input\"\n                                                }\n                                                name={\n                                                    IDENTIFIER_PROJECT_NAME +\n                                                    \"-input\"\n                                                }\n                                                className={\"setting\"}\n                                                placeholder=\"Please provide project name...\"\n                                                defaultValue={\n                                                    localStorageProjectName !==\n                                                        null &&\n                                                    localStorageProjectName !==\n                                                        \"\"\n                                                        ? localStorageProjectName\n                                                        : \"My project\"\n                                                }\n                                                required\n                                            />\n                                            <FormText color=\"muted\">\n                                                Example: \"jUnit\"\n                                            </FormText>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Col md=\"3\">\n                                            <Label\n                                                htmlFor={\n                                                    IDENTIFIER_LIMIT_COUNTING_HOTSPOTS +\n                                                    \"-input\"\n                                                }\n                                            >\n                                                Commit hotspot threshold [%]\n                                            </Label>\n                                        </Col>\n                                        <Col xs=\"12\" md=\"9\">\n                                            <Input\n                                                type=\"text\"\n                                                id={\n                                                    IDENTIFIER_LIMIT_COUNTING_HOTSPOTS +\n                                                    \"-input\"\n                                                }\n                                                name={\n                                                    IDENTIFIER_LIMIT_COUNTING_HOTSPOTS +\n                                                    \"-input\"\n                                                }\n                                                className={\"setting\"}\n                                                placeholder=\"Please provide percentage limit for counting hotspots...\"\n                                                defaultValue={\n                                                    localStorageLimitCountingHotspots !==\n                                                        null &&\n                                                    localStorageLimitCountingHotspots !==\n                                                        \"\"\n                                                        ? localStorageLimitCountingHotspots\n                                                        : \"70\"\n                                                }\n                                                required\n                                            />\n                                            <FormText color=\"muted\">\n                                                Lower limit of the percentage\n                                                commit count of a resource from\n                                                the maximum commit count to\n                                                identify a resource as a\n                                                hotspot. Default: \"70\"\n                                            </FormText>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row className=\"button-row\">\n                                        <Col xs=\"12\" md=\"12\">\n                                            <Button\n                                                className=\"float-right\"\n                                                color=\"success\"\n                                                onClick={this.updateSettings}\n                                                id=\"save\"\n                                            >\n                                                Save\n                                            </Button>\n                                            <Button\n                                                className=\"float-right margin-right\"\n                                                color=\"danger\"\n                                                onClick={this.resetSettings}\n                                                id=\"reset\"\n                                            >\n                                                Set to default\n                                            </Button>\n                                            <Alert\n                                                id=\"database-settings-alert\"\n                                                className=\"float-right settings-alert\"\n                                                color=\"success\"\n                                            >\n                                                Successfully saved settings.\n                                            </Alert>\n                                        </Col>\n                                    </FormGroup>\n                                </Form>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Settings;\n"],"sourceRoot":""}